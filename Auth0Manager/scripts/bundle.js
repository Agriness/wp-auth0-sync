/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/opt/lampp/htdocs/acaspj/wp-content/plugins/wp-auth0-sync/Auth0Manager//";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/*!******************************!*\
  !*** ./dev/scripts/entry.js ***!
  \******************************/
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\n__webpack_require__(/*! ./polyfills/array.from */ 1);\n\nvar _Auth0Manager = __webpack_require__(/*! ./src/Auth0Manager */ 2);\n\nvar _Auth0Manager2 = _interopRequireDefault(_Auth0Manager);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nwindow.Auth0Manager = _Auth0Manager2.default;\n\n/*****************\n ** WEBPACK FOOTER\n ** ./dev/scripts/entry.js\n ** module id = 0\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./dev/scripts/entry.js?");

/***/ },
/* 1 */
/*!*********************************************!*\
  !*** ./dev/scripts/polyfills/array.from.js ***!
  \*********************************************/
/***/ function(module, exports) {

	eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = function () {\n  if (!Array.from) {\n    Array.from = function () {\n      var toStr = Object.prototype.toString;\n      var isCallable = function isCallable(fn) {\n        return typeof fn === 'function' || toStr.call(fn) === '[object Function]';\n      };\n      var toInteger = function toInteger(value) {\n        var number = Number(value);\n        if (isNaN(number)) {\n          return 0;\n        }\n        if (number === 0 || !isFinite(number)) {\n          return number;\n        }\n        return (number > 0 ? 1 : -1) * Math.floor(Math.abs(number));\n      };\n      var maxSafeInteger = Math.pow(2, 53) - 1;\n      var toLength = function toLength(value) {\n        var len = toInteger(value);\n        return Math.min(Math.max(len, 0), maxSafeInteger);\n      };\n\n      // The length property of the from method is 1.\n      return function from(arrayLike /*, mapFn, thisArg */) {\n        // 1. Let C be the this value.\n        var C = this;\n\n        // 2. Let items be ToObject(arrayLike).\n        var items = Object(arrayLike);\n\n        // 3. ReturnIfAbrupt(items).\n        if (arrayLike == null) {\n          throw new TypeError(\"Array.from requires an array-like object - not null or undefined\");\n        }\n\n        // 4. If mapfn is undefined, then let mapping be false.\n        var mapFn = arguments.length > 1 ? arguments[1] : void undefined;\n        var T;\n        if (typeof mapFn !== 'undefined') {\n          // 5. else\n          // 5. a If IsCallable(mapfn) is false, throw a TypeError exception.\n          if (!isCallable(mapFn)) {\n            throw new TypeError('Array.from: when provided, the second argument must be a function');\n          }\n\n          // 5. b. If thisArg was supplied, let T be thisArg; else let T be undefined.\n          if (arguments.length > 2) {\n            T = arguments[2];\n          }\n        }\n\n        // 10. Let lenValue be Get(items, \"length\").\n        // 11. Let len be ToLength(lenValue).\n        var len = toLength(items.length);\n\n        // 13. If IsConstructor(C) is true, then\n        // 13. a. Let A be the result of calling the [[Construct]] internal method of C with an argument list containing the single item len.\n        // 14. a. Else, Let A be ArrayCreate(len).\n        var A = isCallable(C) ? Object(new C(len)) : new Array(len);\n\n        // 16. Let k be 0.\n        var k = 0;\n        // 17. Repeat, while k < lenâ€¦ (also steps a - h)\n        var kValue;\n        while (k < len) {\n          kValue = items[k];\n          if (mapFn) {\n            A[k] = typeof T === 'undefined' ? mapFn(kValue, k) : mapFn.call(T, kValue, k);\n          } else {\n            A[k] = kValue;\n          }\n          k += 1;\n        }\n        // 18. Let putStatus be Put(A, \"length\", len, true).\n        A.length = len;\n        // 20. Return A.\n        return A;\n      };\n    }();\n  }\n}();\n\n/*****************\n ** WEBPACK FOOTER\n ** ./dev/scripts/polyfills/array.from.js\n ** module id = 1\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./dev/scripts/polyfills/array.from.js?");

/***/ },
/* 2 */
/*!*****************************************!*\
  !*** ./dev/scripts/src/Auth0Manager.js ***!
  \*****************************************/
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _tinyEmitter = __webpack_require__(/*! tiny-emitter */ 3);\n\nvar _tinyEmitter2 = _interopRequireDefault(_tinyEmitter);\n\nvar _store2 = __webpack_require__(/*! ../utils/store */ 4);\n\nvar _store3 = _interopRequireDefault(_store2);\n\nvar _superagent = __webpack_require__(/*! superagent */ 5);\n\nvar _superagent2 = _interopRequireDefault(_superagent);\n\nvar _index = __webpack_require__(/*! ../../../~/auth0-js/index */ 10);\n\nvar _index2 = _interopRequireDefault(_index);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar emitter = new _tinyEmitter2.default();\n\nvar Auth0Manager = function () {\n  function Auth0Manager(options) {\n    _classCallCheck(this, Auth0Manager);\n\n    this.options = resolveOptions(options || {});\n    if (!this.options) return;\n\n    this.ssoDataStatus = false;\n\n    this.currentLocation = location.href;\n\n    this.logoutUrl = this.options.logoutUrl;\n\n    this.auth0 = createNewAuth0Instance(this.options);\n\n    setupButtonsListeners(this, this.options);\n  } // constructor(options)\n\n  _createClass(Auth0Manager, [{\n    key: 'init',\n    value: function init(withAutoLogin) {\n      var _this = this;\n\n      this.checkSSOData(function (response) {\n        // sso = true\n\n        _this.ssoDataStatus = true;\n\n        var query = parseSearch(location.search);\n        var idTokenIfExist = false;\n\n        if (query) {\n          idTokenIfExist = query.idToken ? query.idToken : false;\n        }\n\n        if (idTokenIfExist && !_store3.default.get('auth0_idToken')) {\n          _this.auth0.getProfile(idTokenIfExist, function (error, response) {\n            _store3.default.set('auth0_idToken', idTokenIfExist);\n            _store3.default.set('auth0_userID', response.user_id);\n            _store3.default.set('auth0_userEmail', response.email);\n          });\n        }\n\n        if (!idTokenIfExist && _store3.default.get('auth0_idToken')) {\n          _this.auth0.getProfile(_store3.default.get('auth0_idToken'), function (error, response) {\n            _store3.default.set('auth0_idToken', _store3.default.get('auth0_idToken'));\n            _store3.default.set('auth0_userID', response.user_id);\n            _store3.default.set('auth0_userEmail', response.email);\n          });\n        }\n\n        if (!idTokenIfExist && !_store3.default.get('auth0_idToken')) {\n          _this.signin();\n        }\n\n        emitter.emit('loggedIn');\n      }, function () {\n        // sso = false\n\n        _this.ssoDataStatus = false;\n\n        if (withAutoLogin) _this.login();\n        emitter.emit('loggedOut');\n      });\n    }\n  }, {\n    key: 'checkSSOData',\n    value: function checkSSOData(callbackResponse, callbackError) {\n      return this.auth0.getSSOData(function (error, response) {\n        !error && response.sso ? callbackResponse(response) : callbackError();\n      });\n    }\n  }, {\n    key: 'store',\n    value: function store(idToken) {\n      if (idToken) {\n        this.auth0.getProfile(idToken, function (error, response) {\n          _store3.default.set('auth0_idToken', idToken);\n          _store3.default.set('auth0_userID', response.user_id);\n          _store3.default.set('auth0_userEmail', response.email);\n        });\n      }\n    }\n  }, {\n    key: 'login',\n    value: function login() {\n      location.href = 'http://dev.workandcode.com/agriness/central/?returnTo=' + this.currentLocation;\n    }\n  }, {\n    key: 'signin',\n    value: function signin() {\n      this.auth0.signin({ state: this.currentLocation });\n    }\n  }, {\n    key: 'logout',\n    value: function logout() {\n      this.ssoDataStatus = false;\n      _store3.default.clear();\n      location.href = 'https://' + this.options.domain + '/v2/logout?returnTo=' + this.logoutUrl;\n    }\n\n    /**\n     * Public Events\n     */\n\n  }, {\n    key: 'onLoggedIn',\n    value: function onLoggedIn(callback) {\n      emitter.on('loggedIn', callback.bind(null, _store3.default.getAll()) || null);\n    }\n  }, {\n    key: 'onLoggedOut',\n    value: function onLoggedOut(callback) {\n      emitter.on('loggedOut', callback || null);\n    }\n  }]);\n\n  return Auth0Manager;\n}();\n\n;\n\n/**\n * Private methods\n */\n\nfunction resolveOptions(options) {\n  options.domain = options.hasOwnProperty('domain') ? options.domain : false;\n  options.clientID = options.hasOwnProperty('clientID') ? options.clientID : false;\n  options.loginSelector = options.hasOwnProperty('loginSelector') ? options.loginSelector : false;\n  options.logoutSelector = options.hasOwnProperty('logoutSelector') ? options.logoutSelector : false;\n  options.logoutUrl = options.hasOwnProperty('logoutUrl') ? options.logoutUrl : 'http://dev.workandcode.com/agriness/logoutUrl';\n  return !options.domain || !options.clientID ? false : options;\n} // function resolveOptions(options)\n\nfunction createNewAuth0Instance(options) {\n  return new _index2.default({\n    domain: options.domain,\n    clientID: options.clientID,\n    callbackURL: 'http://dev.workandcode.com/agriness/callbackUrl',\n    callbackOnLocationHash: true\n  });\n} // function createNewAuth0Instance(options)\n\nfunction setupButtonsListeners(instance, options) {\n  if (options.loginSelector && !instance.ssoDataStatus) {\n    var buttons = Array.apply(undefined, _toConsumableArray(document.querySelectorAll(options.loginSelector)));\n    buttons.forEach(function (button) {\n      button.addEventListener('click', function (event) {\n        event.preventDefault();\n        instance.login();\n      });\n    });\n  }\n  if (options.logoutSelector) {\n    var _buttons = Array.apply(undefined, _toConsumableArray(document.querySelectorAll(options.logoutSelector)));\n    _buttons.forEach(function (button) {\n      button.addEventListener('click', function () {\n        instance.logout();\n      });\n    });\n  }\n} // function setupButtonsListeners(options)\n\nfunction parseSearch(search) {\n  if (!search) return;\n  var searchObject = {};\n  search = search.split('?');\n  search = search[1].split('&');\n  search.forEach(function (item) {\n    var objKey = item.split('=');\n    var camelCaseKey = objKey[0].split('_');\n    camelCaseKey = camelCaseKey.map(function (item) {\n      return item.charAt(0).toUpperCase() + item.slice(1);\n    });\n    camelCaseKey = camelCaseKey.join('');\n    camelCaseKey = camelCaseKey.charAt(0).toLowerCase() + camelCaseKey.slice(1);\n    console.log(objKey[1]);\n    searchObject[camelCaseKey] = decodeURIComponent(objKey[1].replace(/%22/g, ''));\n  });\n  return searchObject;\n} // function parseHash(search)\n\nfunction parseHash(hash) {\n  if (!hash) return;\n  var hashObject = {};\n  hash = hash.split('#');\n  hash = hash[1].split('&');\n  hash.forEach(function (item) {\n    var objKey = item.split('=');\n    var camelCaseKey = objKey[0].split('_');\n    camelCaseKey = camelCaseKey.map(function (item) {\n      return item.charAt(0).toUpperCase() + item.slice(1);\n    });\n    camelCaseKey = camelCaseKey.join('');\n    camelCaseKey = camelCaseKey.charAt(0).toLowerCase() + camelCaseKey.slice(1);\n    hashObject[camelCaseKey] = decodeURIComponent(objKey[1].replace(/%22/g, ''));\n  });\n  return hashObject;\n} // function parseHash(hash)\n\n\nexports.default = Auth0Manager;\n\n/*****************\n ** WEBPACK FOOTER\n ** ./dev/scripts/src/Auth0Manager.js\n ** module id = 2\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./dev/scripts/src/Auth0Manager.js?");

/***/ },
/* 3 */
/*!*********************************!*\
  !*** ./~/tiny-emitter/index.js ***!
  \*********************************/
/***/ function(module, exports) {

	eval("function E () {\n  // Keep this empty so it's easier to inherit from\n  // (via https://github.com/lipsmack from https://github.com/scottcorgan/tiny-emitter/issues/3)\n}\n\nE.prototype = {\n  on: function (name, callback, ctx) {\n    var e = this.e || (this.e = {});\n\n    (e[name] || (e[name] = [])).push({\n      fn: callback,\n      ctx: ctx\n    });\n\n    return this;\n  },\n\n  once: function (name, callback, ctx) {\n    var self = this;\n    function listener () {\n      self.off(name, listener);\n      callback.apply(ctx, arguments);\n    };\n\n    listener._ = callback\n    return this.on(name, listener, ctx);\n  },\n\n  emit: function (name) {\n    var data = [].slice.call(arguments, 1);\n    var evtArr = ((this.e || (this.e = {}))[name] || []).slice();\n    var i = 0;\n    var len = evtArr.length;\n\n    for (i; i < len; i++) {\n      evtArr[i].fn.apply(evtArr[i].ctx, data);\n    }\n\n    return this;\n  },\n\n  off: function (name, callback) {\n    var e = this.e || (this.e = {});\n    var evts = e[name];\n    var liveEvents = [];\n\n    if (evts && callback) {\n      for (var i = 0, len = evts.length; i < len; i++) {\n        if (evts[i].fn !== callback && evts[i].fn._ !== callback)\n          liveEvents.push(evts[i]);\n      }\n    }\n\n    // Remove event from queue to prevent memory leak\n    // Suggested by https://github.com/lazd\n    // Ref: https://github.com/scottcorgan/tiny-emitter/commit/c6ebfaa9bc973b33d110a84a307742b7cf94c953#commitcomment-5024910\n\n    (liveEvents.length)\n      ? e[name] = liveEvents\n      : delete e[name];\n\n    return this;\n  }\n};\n\nmodule.exports = E;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/tiny-emitter/index.js\n ** module id = 3\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/tiny-emitter/index.js?");

/***/ },
/* 4 */
/*!************************************!*\
  !*** ./dev/scripts/utils/store.js ***!
  \************************************/
/***/ function(module, exports) {

	eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar store = {};\n\nstore.set = function (key, value) {\n  if (value === undefined) return store.remove(key);\n  localStorage.setItem(key, store.serialize(value));\n  return value;\n};\n\nstore.get = function (key) {\n  var value = store.deserialize(localStorage.getItem(key));\n  return value === undefined ? false : value;\n};\n\nstore.has = function (key) {\n  return localStorage.get(key) !== undefined;\n};\n\nstore.remove = function (key) {\n  return localStorage.removeItem(key);\n};\n\nstore.clear = function () {\n  return localStorage.clear();\n};\n\nstore.getAll = function () {\n  var tempObject = {};\n  Object.keys(localStorage).forEach(function (key, value) {\n    tempObject[key] = store.deserialize(localStorage[key]);\n  });\n  return tempObject;\n};\n\nstore.setAll = function (object, prepend) {\n  Object.keys(object).forEach(function (key) {\n    store.set((prepend ? prepend + '_' : '') + key, object[key]);\n  });\n};\n\nstore.serialize = function (value) {\n  return JSON.stringify(value);\n};\n\nstore.deserialize = function (value) {\n  if (typeof value != 'string') return undefined;\n  try {\n    return JSON.parse(value);\n  } catch (error) {\n    return value || undefined;\n  }\n};\n\nexports.default = store;\n\n/*****************\n ** WEBPACK FOOTER\n ** ./dev/scripts/utils/store.js\n ** module id = 4\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./dev/scripts/utils/store.js?");

/***/ },
/* 5 */
/*!************************************!*\
  !*** ./~/superagent/lib/client.js ***!
  \************************************/
/***/ function(module, exports, __webpack_require__) {

	eval("/**\n * Root reference for iframes.\n */\n\nvar root;\nif (typeof window !== 'undefined') { // Browser window\n  root = window;\n} else if (typeof self !== 'undefined') { // Web Worker\n  root = self;\n} else { // Other environments\n  console.warn(\"Using browser-only version of superagent in non-browser environment\");\n  root = this;\n}\n\nvar Emitter = __webpack_require__(/*! emitter */ 6);\nvar requestBase = __webpack_require__(/*! ./request-base */ 7);\nvar isObject = __webpack_require__(/*! ./is-object */ 8);\n\n/**\n * Noop.\n */\n\nfunction noop(){};\n\n/**\n * Expose `request`.\n */\n\nvar request = module.exports = __webpack_require__(/*! ./request */ 9).bind(null, Request);\n\n/**\n * Determine XHR.\n */\n\nrequest.getXHR = function () {\n  if (root.XMLHttpRequest\n      && (!root.location || 'file:' != root.location.protocol\n          || !root.ActiveXObject)) {\n    return new XMLHttpRequest;\n  } else {\n    try { return new ActiveXObject('Microsoft.XMLHTTP'); } catch(e) {}\n    try { return new ActiveXObject('Msxml2.XMLHTTP.6.0'); } catch(e) {}\n    try { return new ActiveXObject('Msxml2.XMLHTTP.3.0'); } catch(e) {}\n    try { return new ActiveXObject('Msxml2.XMLHTTP'); } catch(e) {}\n  }\n  throw Error(\"Browser-only verison of superagent could not find XHR\");\n};\n\n/**\n * Removes leading and trailing whitespace, added to support IE.\n *\n * @param {String} s\n * @return {String}\n * @api private\n */\n\nvar trim = ''.trim\n  ? function(s) { return s.trim(); }\n  : function(s) { return s.replace(/(^\\s*|\\s*$)/g, ''); };\n\n/**\n * Serialize the given `obj`.\n *\n * @param {Object} obj\n * @return {String}\n * @api private\n */\n\nfunction serialize(obj) {\n  if (!isObject(obj)) return obj;\n  var pairs = [];\n  for (var key in obj) {\n    if (null != obj[key]) {\n      pushEncodedKeyValuePair(pairs, key, obj[key]);\n    }\n  }\n  return pairs.join('&');\n}\n\n/**\n * Helps 'serialize' with serializing arrays.\n * Mutates the pairs array.\n *\n * @param {Array} pairs\n * @param {String} key\n * @param {Mixed} val\n */\n\nfunction pushEncodedKeyValuePair(pairs, key, val) {\n  if (Array.isArray(val)) {\n    return val.forEach(function(v) {\n      pushEncodedKeyValuePair(pairs, key, v);\n    });\n  } else if (isObject(val)) {\n    for(var subkey in val) {\n      pushEncodedKeyValuePair(pairs, key + '[' + subkey + ']', val[subkey]);\n    }\n    return;\n  }\n  pairs.push(encodeURIComponent(key)\n    + '=' + encodeURIComponent(val));\n}\n\n/**\n * Expose serialization method.\n */\n\n request.serializeObject = serialize;\n\n /**\n  * Parse the given x-www-form-urlencoded `str`.\n  *\n  * @param {String} str\n  * @return {Object}\n  * @api private\n  */\n\nfunction parseString(str) {\n  var obj = {};\n  var pairs = str.split('&');\n  var pair;\n  var pos;\n\n  for (var i = 0, len = pairs.length; i < len; ++i) {\n    pair = pairs[i];\n    pos = pair.indexOf('=');\n    if (pos == -1) {\n      obj[decodeURIComponent(pair)] = '';\n    } else {\n      obj[decodeURIComponent(pair.slice(0, pos))] =\n        decodeURIComponent(pair.slice(pos + 1));\n    }\n  }\n\n  return obj;\n}\n\n/**\n * Expose parser.\n */\n\nrequest.parseString = parseString;\n\n/**\n * Default MIME type map.\n *\n *     superagent.types.xml = 'application/xml';\n *\n */\n\nrequest.types = {\n  html: 'text/html',\n  json: 'application/json',\n  xml: 'application/xml',\n  urlencoded: 'application/x-www-form-urlencoded',\n  'form': 'application/x-www-form-urlencoded',\n  'form-data': 'application/x-www-form-urlencoded'\n};\n\n/**\n * Default serialization map.\n *\n *     superagent.serialize['application/xml'] = function(obj){\n *       return 'generated xml here';\n *     };\n *\n */\n\n request.serialize = {\n   'application/x-www-form-urlencoded': serialize,\n   'application/json': JSON.stringify\n };\n\n /**\n  * Default parsers.\n  *\n  *     superagent.parse['application/xml'] = function(str){\n  *       return { object parsed from str };\n  *     };\n  *\n  */\n\nrequest.parse = {\n  'application/x-www-form-urlencoded': parseString,\n  'application/json': JSON.parse\n};\n\n/**\n * Parse the given header `str` into\n * an object containing the mapped fields.\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nfunction parseHeader(str) {\n  var lines = str.split(/\\r?\\n/);\n  var fields = {};\n  var index;\n  var line;\n  var field;\n  var val;\n\n  lines.pop(); // trailing CRLF\n\n  for (var i = 0, len = lines.length; i < len; ++i) {\n    line = lines[i];\n    index = line.indexOf(':');\n    field = line.slice(0, index).toLowerCase();\n    val = trim(line.slice(index + 1));\n    fields[field] = val;\n  }\n\n  return fields;\n}\n\n/**\n * Check if `mime` is json or has +json structured syntax suffix.\n *\n * @param {String} mime\n * @return {Boolean}\n * @api private\n */\n\nfunction isJSON(mime) {\n  return /[\\/+]json\\b/.test(mime);\n}\n\n/**\n * Return the mime type for the given `str`.\n *\n * @param {String} str\n * @return {String}\n * @api private\n */\n\nfunction type(str){\n  return str.split(/ *; */).shift();\n};\n\n/**\n * Return header field parameters.\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nfunction params(str){\n  return str.split(/ *; */).reduce(function(obj, str){\n    var parts = str.split(/ *= */),\n        key = parts.shift(),\n        val = parts.shift();\n\n    if (key && val) obj[key] = val;\n    return obj;\n  }, {});\n};\n\n/**\n * Initialize a new `Response` with the given `xhr`.\n *\n *  - set flags (.ok, .error, etc)\n *  - parse header\n *\n * Examples:\n *\n *  Aliasing `superagent` as `request` is nice:\n *\n *      request = superagent;\n *\n *  We can use the promise-like API, or pass callbacks:\n *\n *      request.get('/').end(function(res){});\n *      request.get('/', function(res){});\n *\n *  Sending data can be chained:\n *\n *      request\n *        .post('/user')\n *        .send({ name: 'tj' })\n *        .end(function(res){});\n *\n *  Or passed to `.send()`:\n *\n *      request\n *        .post('/user')\n *        .send({ name: 'tj' }, function(res){});\n *\n *  Or passed to `.post()`:\n *\n *      request\n *        .post('/user', { name: 'tj' })\n *        .end(function(res){});\n *\n * Or further reduced to a single call for simple cases:\n *\n *      request\n *        .post('/user', { name: 'tj' }, function(res){});\n *\n * @param {XMLHTTPRequest} xhr\n * @param {Object} options\n * @api private\n */\n\nfunction Response(req, options) {\n  options = options || {};\n  this.req = req;\n  this.xhr = this.req.xhr;\n  // responseText is accessible only if responseType is '' or 'text' and on older browsers\n  this.text = ((this.req.method !='HEAD' && (this.xhr.responseType === '' || this.xhr.responseType === 'text')) || typeof this.xhr.responseType === 'undefined')\n     ? this.xhr.responseText\n     : null;\n  this.statusText = this.req.xhr.statusText;\n  this._setStatusProperties(this.xhr.status);\n  this.header = this.headers = parseHeader(this.xhr.getAllResponseHeaders());\n  // getAllResponseHeaders sometimes falsely returns \"\" for CORS requests, but\n  // getResponseHeader still works. so we get content-type even if getting\n  // other headers fails.\n  this.header['content-type'] = this.xhr.getResponseHeader('content-type');\n  this._setHeaderProperties(this.header);\n  this.body = this.req.method != 'HEAD'\n    ? this._parseBody(this.text ? this.text : this.xhr.response)\n    : null;\n}\n\n/**\n * Get case-insensitive `field` value.\n *\n * @param {String} field\n * @return {String}\n * @api public\n */\n\nResponse.prototype.get = function(field){\n  return this.header[field.toLowerCase()];\n};\n\n/**\n * Set header related properties:\n *\n *   - `.type` the content type without params\n *\n * A response of \"Content-Type: text/plain; charset=utf-8\"\n * will provide you with a `.type` of \"text/plain\".\n *\n * @param {Object} header\n * @api private\n */\n\nResponse.prototype._setHeaderProperties = function(header){\n  // content-type\n  var ct = this.header['content-type'] || '';\n  this.type = type(ct);\n\n  // params\n  var obj = params(ct);\n  for (var key in obj) this[key] = obj[key];\n};\n\n/**\n * Parse the given body `str`.\n *\n * Used for auto-parsing of bodies. Parsers\n * are defined on the `superagent.parse` object.\n *\n * @param {String} str\n * @return {Mixed}\n * @api private\n */\n\nResponse.prototype._parseBody = function(str){\n  var parse = request.parse[this.type];\n  if (!parse && isJSON(this.type)) {\n    parse = request.parse['application/json'];\n  }\n  return parse && str && (str.length || str instanceof Object)\n    ? parse(str)\n    : null;\n};\n\n/**\n * Set flags such as `.ok` based on `status`.\n *\n * For example a 2xx response will give you a `.ok` of __true__\n * whereas 5xx will be __false__ and `.error` will be __true__. The\n * `.clientError` and `.serverError` are also available to be more\n * specific, and `.statusType` is the class of error ranging from 1..5\n * sometimes useful for mapping respond colors etc.\n *\n * \"sugar\" properties are also defined for common cases. Currently providing:\n *\n *   - .noContent\n *   - .badRequest\n *   - .unauthorized\n *   - .notAcceptable\n *   - .notFound\n *\n * @param {Number} status\n * @api private\n */\n\nResponse.prototype._setStatusProperties = function(status){\n  // handle IE9 bug: http://stackoverflow.com/questions/10046972/msie-returns-status-code-of-1223-for-ajax-request\n  if (status === 1223) {\n    status = 204;\n  }\n\n  var type = status / 100 | 0;\n\n  // status / class\n  this.status = this.statusCode = status;\n  this.statusType = type;\n\n  // basics\n  this.info = 1 == type;\n  this.ok = 2 == type;\n  this.clientError = 4 == type;\n  this.serverError = 5 == type;\n  this.error = (4 == type || 5 == type)\n    ? this.toError()\n    : false;\n\n  // sugar\n  this.accepted = 202 == status;\n  this.noContent = 204 == status;\n  this.badRequest = 400 == status;\n  this.unauthorized = 401 == status;\n  this.notAcceptable = 406 == status;\n  this.notFound = 404 == status;\n  this.forbidden = 403 == status;\n};\n\n/**\n * Return an `Error` representative of this response.\n *\n * @return {Error}\n * @api public\n */\n\nResponse.prototype.toError = function(){\n  var req = this.req;\n  var method = req.method;\n  var url = req.url;\n\n  var msg = 'cannot ' + method + ' ' + url + ' (' + this.status + ')';\n  var err = new Error(msg);\n  err.status = this.status;\n  err.method = method;\n  err.url = url;\n\n  return err;\n};\n\n/**\n * Expose `Response`.\n */\n\nrequest.Response = Response;\n\n/**\n * Initialize a new `Request` with the given `method` and `url`.\n *\n * @param {String} method\n * @param {String} url\n * @api public\n */\n\nfunction Request(method, url) {\n  var self = this;\n  this._query = this._query || [];\n  this.method = method;\n  this.url = url;\n  this.header = {}; // preserves header name case\n  this._header = {}; // coerces header names to lowercase\n  this.on('end', function(){\n    var err = null;\n    var res = null;\n\n    try {\n      res = new Response(self);\n    } catch(e) {\n      err = new Error('Parser is unable to parse the response');\n      err.parse = true;\n      err.original = e;\n      // issue #675: return the raw response if the response parsing fails\n      err.rawResponse = self.xhr && self.xhr.responseText ? self.xhr.responseText : null;\n      // issue #876: return the http status code if the response parsing fails\n      err.statusCode = self.xhr && self.xhr.status ? self.xhr.status : null;\n      return self.callback(err);\n    }\n\n    self.emit('response', res);\n\n    var new_err;\n    try {\n      if (res.status < 200 || res.status >= 300) {\n        new_err = new Error(res.statusText || 'Unsuccessful HTTP response');\n        new_err.original = err;\n        new_err.response = res;\n        new_err.status = res.status;\n      }\n    } catch(e) {\n      new_err = e; // #985 touching res may cause INVALID_STATE_ERR on old Android\n    }\n\n    // #1000 don't catch errors from the callback to avoid double calling it\n    if (new_err) {\n      self.callback(new_err, res);\n    } else {\n      self.callback(null, res);\n    }\n  });\n}\n\n/**\n * Mixin `Emitter` and `requestBase`.\n */\n\nEmitter(Request.prototype);\nfor (var key in requestBase) {\n  Request.prototype[key] = requestBase[key];\n}\n\n/**\n * Set Content-Type to `type`, mapping values from `request.types`.\n *\n * Examples:\n *\n *      superagent.types.xml = 'application/xml';\n *\n *      request.post('/')\n *        .type('xml')\n *        .send(xmlstring)\n *        .end(callback);\n *\n *      request.post('/')\n *        .type('application/xml')\n *        .send(xmlstring)\n *        .end(callback);\n *\n * @param {String} type\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.type = function(type){\n  this.set('Content-Type', request.types[type] || type);\n  return this;\n};\n\n/**\n * Set responseType to `val`. Presently valid responseTypes are 'blob' and\n * 'arraybuffer'.\n *\n * Examples:\n *\n *      req.get('/')\n *        .responseType('blob')\n *        .end(callback);\n *\n * @param {String} val\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.responseType = function(val){\n  this._responseType = val;\n  return this;\n};\n\n/**\n * Set Accept to `type`, mapping values from `request.types`.\n *\n * Examples:\n *\n *      superagent.types.json = 'application/json';\n *\n *      request.get('/agent')\n *        .accept('json')\n *        .end(callback);\n *\n *      request.get('/agent')\n *        .accept('application/json')\n *        .end(callback);\n *\n * @param {String} accept\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.accept = function(type){\n  this.set('Accept', request.types[type] || type);\n  return this;\n};\n\n/**\n * Set Authorization field value with `user` and `pass`.\n *\n * @param {String} user\n * @param {String} pass\n * @param {Object} options with 'type' property 'auto' or 'basic' (default 'basic')\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.auth = function(user, pass, options){\n  if (!options) {\n    options = {\n      type: 'basic'\n    }\n  }\n\n  switch (options.type) {\n    case 'basic':\n      var str = btoa(user + ':' + pass);\n      this.set('Authorization', 'Basic ' + str);\n    break;\n\n    case 'auto':\n      this.username = user;\n      this.password = pass;\n    break;\n  }\n  return this;\n};\n\n/**\n* Add query-string `val`.\n*\n* Examples:\n*\n*   request.get('/shoes')\n*     .query('size=10')\n*     .query({ color: 'blue' })\n*\n* @param {Object|String} val\n* @return {Request} for chaining\n* @api public\n*/\n\nRequest.prototype.query = function(val){\n  if ('string' != typeof val) val = serialize(val);\n  if (val) this._query.push(val);\n  return this;\n};\n\n/**\n * Queue the given `file` as an attachment to the specified `field`,\n * with optional `filename`.\n *\n * ``` js\n * request.post('/upload')\n *   .attach('content', new Blob(['<a id=\"a\"><b id=\"b\">hey!</b></a>'], { type: \"text/html\"}))\n *   .end(callback);\n * ```\n *\n * @param {String} field\n * @param {Blob|File} file\n * @param {String} filename\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.attach = function(field, file, filename){\n  this._getFormData().append(field, file, filename || file.name);\n  return this;\n};\n\nRequest.prototype._getFormData = function(){\n  if (!this._formData) {\n    this._formData = new root.FormData();\n  }\n  return this._formData;\n};\n\n/**\n * Invoke the callback with `err` and `res`\n * and handle arity check.\n *\n * @param {Error} err\n * @param {Response} res\n * @api private\n */\n\nRequest.prototype.callback = function(err, res){\n  var fn = this._callback;\n  this.clearTimeout();\n  fn(err, res);\n};\n\n/**\n * Invoke callback with x-domain error.\n *\n * @api private\n */\n\nRequest.prototype.crossDomainError = function(){\n  var err = new Error('Request has been terminated\\nPossible causes: the network is offline, Origin is not allowed by Access-Control-Allow-Origin, the page is being unloaded, etc.');\n  err.crossDomain = true;\n\n  err.status = this.status;\n  err.method = this.method;\n  err.url = this.url;\n\n  this.callback(err);\n};\n\n/**\n * Invoke callback with timeout error.\n *\n * @api private\n */\n\nRequest.prototype._timeoutError = function(){\n  var timeout = this._timeout;\n  var err = new Error('timeout of ' + timeout + 'ms exceeded');\n  err.timeout = timeout;\n  this.callback(err);\n};\n\n/**\n * Compose querystring to append to req.url\n *\n * @api private\n */\n\nRequest.prototype._appendQueryString = function(){\n  var query = this._query.join('&');\n  if (query) {\n    this.url += ~this.url.indexOf('?')\n      ? '&' + query\n      : '?' + query;\n  }\n};\n\n/**\n * Initiate request, invoking callback `fn(res)`\n * with an instanceof `Response`.\n *\n * @param {Function} fn\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.end = function(fn){\n  var self = this;\n  var xhr = this.xhr = request.getXHR();\n  var timeout = this._timeout;\n  var data = this._formData || this._data;\n\n  // store callback\n  this._callback = fn || noop;\n\n  // state change\n  xhr.onreadystatechange = function(){\n    if (4 != xhr.readyState) return;\n\n    // In IE9, reads to any property (e.g. status) off of an aborted XHR will\n    // result in the error \"Could not complete the operation due to error c00c023f\"\n    var status;\n    try { status = xhr.status } catch(e) { status = 0; }\n\n    if (0 == status) {\n      if (self.timedout) return self._timeoutError();\n      if (self._aborted) return;\n      return self.crossDomainError();\n    }\n    self.emit('end');\n  };\n\n  // progress\n  var handleProgress = function(e){\n    if (e.total > 0) {\n      e.percent = e.loaded / e.total * 100;\n    }\n    e.direction = 'download';\n    self.emit('progress', e);\n  };\n  if (this.hasListeners('progress')) {\n    xhr.onprogress = handleProgress;\n  }\n  try {\n    if (xhr.upload && this.hasListeners('progress')) {\n      xhr.upload.onprogress = handleProgress;\n    }\n  } catch(e) {\n    // Accessing xhr.upload fails in IE from a web worker, so just pretend it doesn't exist.\n    // Reported here:\n    // https://connect.microsoft.com/IE/feedback/details/837245/xmlhttprequest-upload-throws-invalid-argument-when-used-from-web-worker-context\n  }\n\n  // timeout\n  if (timeout && !this._timer) {\n    this._timer = setTimeout(function(){\n      self.timedout = true;\n      self.abort();\n    }, timeout);\n  }\n\n  // querystring\n  this._appendQueryString();\n\n  // initiate request\n  if (this.username && this.password) {\n    xhr.open(this.method, this.url, true, this.username, this.password);\n  } else {\n    xhr.open(this.method, this.url, true);\n  }\n\n  // CORS\n  if (this._withCredentials) xhr.withCredentials = true;\n\n  // body\n  if ('GET' != this.method && 'HEAD' != this.method && 'string' != typeof data && !this._isHost(data)) {\n    // serialize stuff\n    var contentType = this._header['content-type'];\n    var serialize = this._serializer || request.serialize[contentType ? contentType.split(';')[0] : ''];\n    if (!serialize && isJSON(contentType)) serialize = request.serialize['application/json'];\n    if (serialize) data = serialize(data);\n  }\n\n  // set header fields\n  for (var field in this.header) {\n    if (null == this.header[field]) continue;\n    xhr.setRequestHeader(field, this.header[field]);\n  }\n\n  if (this._responseType) {\n    xhr.responseType = this._responseType;\n  }\n\n  // send stuff\n  this.emit('request', this);\n\n  // IE11 xhr.send(undefined) sends 'undefined' string as POST payload (instead of nothing)\n  // We need null here if data is undefined\n  xhr.send(typeof data !== 'undefined' ? data : null);\n  return this;\n};\n\n\n/**\n * Expose `Request`.\n */\n\nrequest.Request = Request;\n\n/**\n * GET `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} [data] or fn\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.get = function(url, data, fn){\n  var req = request('GET', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.query(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * HEAD `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} [data] or fn\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.head = function(url, data, fn){\n  var req = request('HEAD', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * OPTIONS query to `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} [data] or fn\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.options = function(url, data, fn){\n  var req = request('OPTIONS', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * DELETE `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nfunction del(url, fn){\n  var req = request('DELETE', url);\n  if (fn) req.end(fn);\n  return req;\n};\n\nrequest['del'] = del;\nrequest['delete'] = del;\n\n/**\n * PATCH `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed} [data]\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.patch = function(url, data, fn){\n  var req = request('PATCH', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * POST `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed} [data]\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.post = function(url, data, fn){\n  var req = request('POST', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * PUT `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} [data] or fn\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.put = function(url, data, fn){\n  var req = request('PUT', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/superagent/lib/client.js\n ** module id = 5\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/superagent/lib/client.js?");

/***/ },
/* 6 */
/*!**************************************!*\
  !*** ./~/component-emitter/index.js ***!
  \**************************************/
/***/ function(module, exports, __webpack_require__) {

	eval("\r\n/**\r\n * Expose `Emitter`.\r\n */\r\n\r\nif (true) {\r\n  module.exports = Emitter;\r\n}\r\n\r\n/**\r\n * Initialize a new `Emitter`.\r\n *\r\n * @api public\r\n */\r\n\r\nfunction Emitter(obj) {\r\n  if (obj) return mixin(obj);\r\n};\r\n\r\n/**\r\n * Mixin the emitter properties.\r\n *\r\n * @param {Object} obj\r\n * @return {Object}\r\n * @api private\r\n */\r\n\r\nfunction mixin(obj) {\r\n  for (var key in Emitter.prototype) {\r\n    obj[key] = Emitter.prototype[key];\r\n  }\r\n  return obj;\r\n}\r\n\r\n/**\r\n * Listen on the given `event` with `fn`.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.on =\r\nEmitter.prototype.addEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\r\n    .push(fn);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Adds an `event` listener that will be invoked a single\r\n * time then automatically removed.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.once = function(event, fn){\r\n  function on() {\r\n    this.off(event, on);\r\n    fn.apply(this, arguments);\r\n  }\r\n\r\n  on.fn = fn;\r\n  this.on(event, on);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Remove the given callback for `event` or all\r\n * registered callbacks.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.off =\r\nEmitter.prototype.removeListener =\r\nEmitter.prototype.removeAllListeners =\r\nEmitter.prototype.removeEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n\r\n  // all\r\n  if (0 == arguments.length) {\r\n    this._callbacks = {};\r\n    return this;\r\n  }\r\n\r\n  // specific event\r\n  var callbacks = this._callbacks['$' + event];\r\n  if (!callbacks) return this;\r\n\r\n  // remove all handlers\r\n  if (1 == arguments.length) {\r\n    delete this._callbacks['$' + event];\r\n    return this;\r\n  }\r\n\r\n  // remove specific handler\r\n  var cb;\r\n  for (var i = 0; i < callbacks.length; i++) {\r\n    cb = callbacks[i];\r\n    if (cb === fn || cb.fn === fn) {\r\n      callbacks.splice(i, 1);\r\n      break;\r\n    }\r\n  }\r\n  return this;\r\n};\r\n\r\n/**\r\n * Emit `event` with the given args.\r\n *\r\n * @param {String} event\r\n * @param {Mixed} ...\r\n * @return {Emitter}\r\n */\r\n\r\nEmitter.prototype.emit = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n  var args = [].slice.call(arguments, 1)\r\n    , callbacks = this._callbacks['$' + event];\r\n\r\n  if (callbacks) {\r\n    callbacks = callbacks.slice(0);\r\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\r\n      callbacks[i].apply(this, args);\r\n    }\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Return array of callbacks for `event`.\r\n *\r\n * @param {String} event\r\n * @return {Array}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.listeners = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n  return this._callbacks['$' + event] || [];\r\n};\r\n\r\n/**\r\n * Check if this emitter has `event` handlers.\r\n *\r\n * @param {String} event\r\n * @return {Boolean}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.hasListeners = function(event){\r\n  return !! this.listeners(event).length;\r\n};\r\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/component-emitter/index.js\n ** module id = 6\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/component-emitter/index.js?");

/***/ },
/* 7 */
/*!******************************************!*\
  !*** ./~/superagent/lib/request-base.js ***!
  \******************************************/
/***/ function(module, exports, __webpack_require__) {

	eval("/**\n * Module of mixed-in functions shared between node and client code\n */\nvar isObject = __webpack_require__(/*! ./is-object */ 8);\n\n/**\n * Clear previous timeout.\n *\n * @return {Request} for chaining\n * @api public\n */\n\nexports.clearTimeout = function _clearTimeout(){\n  this._timeout = 0;\n  clearTimeout(this._timer);\n  return this;\n};\n\n/**\n * Override default response body parser\n *\n * This function will be called to convert incoming data into request.body\n *\n * @param {Function}\n * @api public\n */\n\nexports.parse = function parse(fn){\n  this._parser = fn;\n  return this;\n};\n\n/**\n * Override default request body serializer\n *\n * This function will be called to convert data set via .send or .attach into payload to send\n *\n * @param {Function}\n * @api public\n */\n\nexports.serialize = function serialize(fn){\n  this._serializer = fn;\n  return this;\n};\n\n/**\n * Set timeout to `ms`.\n *\n * @param {Number} ms\n * @return {Request} for chaining\n * @api public\n */\n\nexports.timeout = function timeout(ms){\n  this._timeout = ms;\n  return this;\n};\n\n/**\n * Promise support\n *\n * @param {Function} resolve\n * @param {Function} reject\n * @return {Request}\n */\n\nexports.then = function then(resolve, reject) {\n  if (!this._fullfilledPromise) {\n    var self = this;\n    this._fullfilledPromise = new Promise(function(innerResolve, innerReject){\n      self.end(function(err, res){\n        if (err) innerReject(err); else innerResolve(res);\n      });\n    });\n  }\n  return this._fullfilledPromise.then(resolve, reject);\n}\n\n/**\n * Allow for extension\n */\n\nexports.use = function use(fn) {\n  fn(this);\n  return this;\n}\n\n\n/**\n * Get request header `field`.\n * Case-insensitive.\n *\n * @param {String} field\n * @return {String}\n * @api public\n */\n\nexports.get = function(field){\n  return this._header[field.toLowerCase()];\n};\n\n/**\n * Get case-insensitive header `field` value.\n * This is a deprecated internal API. Use `.get(field)` instead.\n *\n * (getHeader is no longer used internally by the superagent code base)\n *\n * @param {String} field\n * @return {String}\n * @api private\n * @deprecated\n */\n\nexports.getHeader = exports.get;\n\n/**\n * Set header `field` to `val`, or multiple fields with one object.\n * Case-insensitive.\n *\n * Examples:\n *\n *      req.get('/')\n *        .set('Accept', 'application/json')\n *        .set('X-API-Key', 'foobar')\n *        .end(callback);\n *\n *      req.get('/')\n *        .set({ Accept: 'application/json', 'X-API-Key': 'foobar' })\n *        .end(callback);\n *\n * @param {String|Object} field\n * @param {String} val\n * @return {Request} for chaining\n * @api public\n */\n\nexports.set = function(field, val){\n  if (isObject(field)) {\n    for (var key in field) {\n      this.set(key, field[key]);\n    }\n    return this;\n  }\n  this._header[field.toLowerCase()] = val;\n  this.header[field] = val;\n  return this;\n};\n\n/**\n * Remove header `field`.\n * Case-insensitive.\n *\n * Example:\n *\n *      req.get('/')\n *        .unset('User-Agent')\n *        .end(callback);\n *\n * @param {String} field\n */\nexports.unset = function(field){\n  delete this._header[field.toLowerCase()];\n  delete this.header[field];\n  return this;\n};\n\n/**\n * Write the field `name` and `val` for \"multipart/form-data\"\n * request bodies.\n *\n * ``` js\n * request.post('/upload')\n *   .field('foo', 'bar')\n *   .end(callback);\n * ```\n *\n * @param {String} name\n * @param {String|Blob|File|Buffer|fs.ReadStream} val\n * @return {Request} for chaining\n * @api public\n */\nexports.field = function(name, val) {\n  this._getFormData().append(name, val);\n  return this;\n};\n\n/**\n * Abort the request, and clear potential timeout.\n *\n * @return {Request}\n * @api public\n */\nexports.abort = function(){\n  if (this._aborted) {\n    return this;\n  }\n  this._aborted = true;\n  this.xhr && this.xhr.abort(); // browser\n  this.req && this.req.abort(); // node\n  this.clearTimeout();\n  this.emit('abort');\n  return this;\n};\n\n/**\n * Enable transmission of cookies with x-domain requests.\n *\n * Note that for this to work the origin must not be\n * using \"Access-Control-Allow-Origin\" with a wildcard,\n * and also must set \"Access-Control-Allow-Credentials\"\n * to \"true\".\n *\n * @api public\n */\n\nexports.withCredentials = function(){\n  // This is browser-only functionality. Node side is no-op.\n  this._withCredentials = true;\n  return this;\n};\n\n/**\n * Set the max redirects to `n`. Does noting in browser XHR implementation.\n *\n * @param {Number} n\n * @return {Request} for chaining\n * @api public\n */\n\nexports.redirects = function(n){\n  this._maxRedirects = n;\n  return this;\n};\n\n/**\n * Convert to a plain javascript object (not JSON string) of scalar properties.\n * Note as this method is designed to return a useful non-this value,\n * it cannot be chained.\n *\n * @return {Object} describing method, url, and data of this request\n * @api public\n */\n\nexports.toJSON = function(){\n  return {\n    method: this.method,\n    url: this.url,\n    data: this._data,\n    headers: this._header\n  };\n};\n\n/**\n * Check if `obj` is a host object,\n * we don't want to serialize these :)\n *\n * TODO: future proof, move to compoent land\n *\n * @param {Object} obj\n * @return {Boolean}\n * @api private\n */\n\nexports._isHost = function _isHost(obj) {\n  var str = {}.toString.call(obj);\n\n  switch (str) {\n    case '[object File]':\n    case '[object Blob]':\n    case '[object FormData]':\n      return true;\n    default:\n      return false;\n  }\n}\n\n/**\n * Send `data` as the request body, defaulting the `.type()` to \"json\" when\n * an object is given.\n *\n * Examples:\n *\n *       // manual json\n *       request.post('/user')\n *         .type('json')\n *         .send('{\"name\":\"tj\"}')\n *         .end(callback)\n *\n *       // auto json\n *       request.post('/user')\n *         .send({ name: 'tj' })\n *         .end(callback)\n *\n *       // manual x-www-form-urlencoded\n *       request.post('/user')\n *         .type('form')\n *         .send('name=tj')\n *         .end(callback)\n *\n *       // auto x-www-form-urlencoded\n *       request.post('/user')\n *         .type('form')\n *         .send({ name: 'tj' })\n *         .end(callback)\n *\n *       // defaults to x-www-form-urlencoded\n *      request.post('/user')\n *        .send('name=tobi')\n *        .send('species=ferret')\n *        .end(callback)\n *\n * @param {String|Object} data\n * @return {Request} for chaining\n * @api public\n */\n\nexports.send = function(data){\n  var obj = isObject(data);\n  var type = this._header['content-type'];\n\n  // merge\n  if (obj && isObject(this._data)) {\n    for (var key in data) {\n      this._data[key] = data[key];\n    }\n  } else if ('string' == typeof data) {\n    // default to x-www-form-urlencoded\n    if (!type) this.type('form');\n    type = this._header['content-type'];\n    if ('application/x-www-form-urlencoded' == type) {\n      this._data = this._data\n        ? this._data + '&' + data\n        : data;\n    } else {\n      this._data = (this._data || '') + data;\n    }\n  } else {\n    this._data = data;\n  }\n\n  if (!obj || this._isHost(data)) return this;\n\n  // default to json\n  if (!type) this.type('json');\n  return this;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/superagent/lib/request-base.js\n ** module id = 7\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/superagent/lib/request-base.js?");

/***/ },
/* 8 */
/*!***************************************!*\
  !*** ./~/superagent/lib/is-object.js ***!
  \***************************************/
/***/ function(module, exports) {

	eval("/**\n * Check if `obj` is an object.\n *\n * @param {Object} obj\n * @return {Boolean}\n * @api private\n */\n\nfunction isObject(obj) {\n  return null !== obj && 'object' === typeof obj;\n}\n\nmodule.exports = isObject;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/superagent/lib/is-object.js\n ** module id = 8\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/superagent/lib/is-object.js?");

/***/ },
/* 9 */
/*!*************************************!*\
  !*** ./~/superagent/lib/request.js ***!
  \*************************************/
/***/ function(module, exports) {

	eval("// The node and browser modules expose versions of this with the\n// appropriate constructor function bound as first argument\n/**\n * Issue a request:\n *\n * Examples:\n *\n *    request('GET', '/users').end(callback)\n *    request('/users').end(callback)\n *    request('/users', callback)\n *\n * @param {String} method\n * @param {String|Function} url or callback\n * @return {Request}\n * @api public\n */\n\nfunction request(RequestConstructor, method, url) {\n  // callback\n  if ('function' == typeof url) {\n    return new RequestConstructor('GET', method).end(url);\n  }\n\n  // url first\n  if (2 == arguments.length) {\n    return new RequestConstructor('GET', method);\n  }\n\n  return new RequestConstructor(method, url);\n}\n\nmodule.exports = request;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/superagent/lib/request.js\n ** module id = 9\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/superagent/lib/request.js?");

/***/ },
/* 10 */
/*!*****************************!*\
  !*** ./~/auth0-js/index.js ***!
  \*****************************/
/***/ function(module, exports, __webpack_require__) {

	eval("/* WEBPACK VAR INJECTION */(function(global) {/**\n * Module dependencies.\n */\n\nvar Base64Url         = __webpack_require__(/*! ./lib/base64_url */ 11);\nvar assert_required   = __webpack_require__(/*! ./lib/assert_required */ 13);\nvar is_array          = __webpack_require__(/*! ./lib/is-array */ 14);\nvar index_of          = __webpack_require__(/*! ./lib/index-of */ 15);\n\nvar qs                = __webpack_require__(/*! qs */ 16);\nvar xtend             = __webpack_require__(/*! xtend */ 17);\nvar trim              = __webpack_require__(/*! trim */ 23);\nvar reqwest           = __webpack_require__(/*! reqwest */ 24);\nvar WinChan           = __webpack_require__(/*! winchan */ 25);\n\nvar jsonp             = __webpack_require__(/*! jsonp */ 26);\nvar jsonpOpts         = { param: 'cbx', timeout: 8000, prefix: '__auth0jp' };\n\nvar same_origin       = __webpack_require__(/*! ./lib/same-origin */ 30);\nvar json_parse        = __webpack_require__(/*! ./lib/json-parse */ 31);\nvar LoginError        = __webpack_require__(/*! ./lib/LoginError */ 33);\nvar use_jsonp         = __webpack_require__(/*! ./lib/use_jsonp */ 34);\n\n/**\n * Check if running in IE.\n *\n * @returns {Number} -1 if not IE, IE version otherwise.\n */\nfunction isInternetExplorer() {\n  var rv = -1; // Return value assumes failure.\n  var ua = navigator.userAgent;\n  var re;\n  if (navigator.appName === 'Microsoft Internet Explorer') {\n    re = new RegExp('MSIE ([0-9]{1,}[\\.0-9]{0,})');\n    if (re.exec(ua) != null) {\n      rv = parseFloat(RegExp.$1);\n    }\n  }\n  // IE > 11\n  else if (ua.indexOf('Trident') > -1) {\n    re = new RegExp('rv:([0-9]{2,2}[\\.0-9]{0,})');\n    if (re.exec(ua) !== null) {\n      rv = parseFloat(RegExp.$1);\n    }\n  }\n\n  return rv;\n}\n\n/**\n * Stringify popup options object into\n * `window.open` string options format\n *\n * @param {Object} popupOptions\n * @private\n */\n\nfunction stringifyPopupSettings(popupOptions) {\n  var settings = '';\n\n  for (var key in popupOptions) {\n    settings += key + '=' + popupOptions[key] + ',';\n  }\n\n  return settings.slice(0, -1);\n}\n\n\n/**\n * Check that a key has been set to something different than null\n * or undefined.\n *\n * @param {Object} obj\n * @param {String} key\n */\nfunction checkIfSet(obj, key) {\n  /*\n   * false      != null -> true\n   * true       != null -> true\n   * undefined  != null -> false\n   * null       != null -> false\n   */\n  return !!(obj && obj[key] != null);\n}\n\nfunction handleRequestError(err, callback) {\n  var status = err.status;\n  var responseText = 'string' === typeof err.responseText ? err.responseText : err;\n\n  var isAffectedIEVersion = isInternetExplorer() === 10 || isInternetExplorer() === 11;\n  var zeroStatus = (!status || status === 0);\n\n  var onLine = !!window.navigator.onLine;\n\n  // Request failed because we are offline.\n  if (zeroStatus && !onLine ) {\n    status = 0;\n    responseText = {\n      code: 'offline'\n    };\n  // http://stackoverflow.com/questions/23229723/ie-10-11-cors-status-0\n  // XXX IE10 when a request fails in CORS returns status code 0\n  // See: http://caniuse.com/#search=navigator.onLine\n  } else if (zeroStatus && isAffectedIEVersion) {\n    status = 401;\n    responseText = {\n      code: 'invalid_user_password'\n    };\n  // If not IE10/11 and not offline it means that Auth0 host is unreachable:\n  // Connection Timeout or Connection Refused.\n  } else if (zeroStatus) {\n    status = 0;\n    responseText = {\n      code: 'connection_refused_timeout'\n    };\n  }\n\n  var error = new LoginError(status, responseText);\n  callback(error);\n}\n\n/**\n * join url from protocol\n */\n\nfunction joinUrl(protocol, domain, endpoint) {\n  return protocol + '//' + domain + endpoint;\n}\n\n/**\n * Create an `Auth0` instance with `options`\n *\n * @class Auth0\n * @constructor\n */\nfunction Auth0 (options) {\n  // XXX Deprecated: We prefer new Auth0(...)\n  if (!(this instanceof Auth0)) {\n    return new Auth0(options);\n  }\n\n  assert_required(options, 'clientID');\n  assert_required(options, 'domain');\n\n  this._useJSONP = null != options.forceJSONP ?\n                    !!options.forceJSONP :\n                    use_jsonp() && !same_origin('https:', options.domain);\n\n  this._clientID = options.clientID;\n  this._callbackURL = options.callbackURL || document.location.href;\n  this._shouldRedirect = !!options.callbackURL;\n  this._domain = options.domain;\n  this._callbackOnLocationHash = false || options.callbackOnLocationHash;\n  this._cordovaSocialPlugins = {\n    facebook: this._phonegapFacebookLogin\n  };\n  this._useCordovaSocialPlugins = false || options.useCordovaSocialPlugins;\n  this._sendClientInfo = null != options.sendSDKClientInfo ? options.sendSDKClientInfo : true;\n}\n\n/**\n * Export version with `Auth0` constructor\n *\n * @property {String} version\n */\n\nAuth0.version = __webpack_require__(/*! ./version */ 35).str;\n\n/**\n * Export client info object\n *\n *\n * @property {Hash}\n */\n\nAuth0.clientInfo = { name: 'auth0.js', version: Auth0.version };\n\n\n/**\n * Wraps calls to window.open so it can be overriden in Electron.\n *\n * In Electron, window.open returns an object which provides limited control\n * over the opened window (see\n * http://electron.atom.io/docs/v0.36.0/api/window-open/).\n */\nAuth0.prototype.openWindow = function(url, name, options) {\n  return window.open(url, name, stringifyPopupSettings(options));\n}\n\n/**\n * Redirect current location to `url`\n *\n * @param {String} url\n * @private\n */\n\nAuth0.prototype._redirect = function (url) {\n  global.window.location = url;\n};\n\nAuth0.prototype._getCallbackOnLocationHash = function(options) {\n  return (options && typeof options.callbackOnLocationHash !== 'undefined') ?\n    options.callbackOnLocationHash : this._callbackOnLocationHash;\n};\n\nAuth0.prototype._getCallbackURL = function(options) {\n  return (options && typeof options.callbackURL !== 'undefined') ?\n    options.callbackURL : this._callbackURL;\n};\n\nAuth0.prototype._getClientInfoString = function () {\n  var clientInfo = JSON.stringify(Auth0.clientInfo);\n  return Base64Url.encode(clientInfo);\n};\n\nAuth0.prototype._getClientInfoHeader = function () {\n  return {\n    'Auth0-Client': this._getClientInfoString()\n  };\n};\n\n/**\n * Renders and submits a WSFed form\n *\n * @param {Object} options\n * @param {Function} formHtml\n * @private\n */\n\nAuth0.prototype._renderAndSubmitWSFedForm = function (options, formHtml) {\n  var div = document.createElement('div');\n  div.innerHTML = formHtml;\n  var form = document.body.appendChild(div).children[0];\n\n  if (options.popup && !this._getCallbackOnLocationHash(options)) {\n    form.target = 'auth0_signup_popup';\n  }\n\n  form.submit();\n};\n\n/**\n * Resolve response type as `token` or `code`\n *\n * @return {Object} `scope` and `response_type` properties\n * @private\n */\n\nAuth0.prototype._getMode = function (options) {\n  return {\n    scope: 'openid',\n    response_type: this._getCallbackOnLocationHash(options) ? 'token' : 'code'\n  };\n};\n\nAuth0.prototype._configureOfflineMode = function(options) {\n  if (options.scope && options.scope.indexOf('offline_access') >= 0) {\n    options.device = options.device || 'Browser';\n  }\n};\n\n/**\n * Get user information from API\n *\n * @param {Object} profile\n * @param {String} id_token\n * @param {Function} callback\n * @private\n */\n\nAuth0.prototype._getUserInfo = function (profile, id_token, callback) {\n\n  if (!(profile && !profile.user_id)) {\n    return callback(null, profile);\n  }\n\n  // the scope was just openid\n  var _this = this;\n  var protocol = 'https:';\n  var domain = this._domain;\n  var endpoint = '/tokeninfo';\n  var url = joinUrl(protocol, domain, endpoint);\n\n  var fail = function (status, description) {\n    var error = new Error(status + ': ' + (description || ''));\n\n    // These two properties are added for compatibility with old versions (no Error instance was returned)\n    error.error = status;\n    error.error_description = description;\n\n    callback(error);\n  };\n\n  if (this._useJSONP) {\n    return jsonp(url + '?' + qs.stringify({id_token: id_token}), jsonpOpts, function (err, resp) {\n      if (err) {\n        return fail(0, err.toString());\n      }\n\n      return resp.status === 200 ?\n        callback(null, resp.user) :\n        fail(resp.status, resp.err || resp.error);\n    });\n  }\n\n  return reqwest({\n    url:          same_origin(protocol, domain) ? endpoint : url,\n    method:       'post',\n    type:         'json',\n    crossOrigin:  !same_origin(protocol, domain),\n    data:         {id_token: id_token}\n  }).fail(function (err) {\n    fail(err.status, err.responseText);\n  }).then(function (userinfo) {\n    callback(null, userinfo);\n  });\n\n};\n\n/**\n * Get profile data by `id_token`\n *\n * @param {String} id_token\n * @param {Function} callback\n * @method getProfile\n */\n\nAuth0.prototype.getProfile = function (id_token, callback) {\n  if ('function' !== typeof callback) {\n    throw new Error('A callback function is required');\n  }\n  if (!id_token || typeof id_token !== 'string') {\n    return callback(new Error('Invalid token'));\n  }\n\n  this._getUserInfo(this.decodeJwt(id_token), id_token, callback);\n};\n\n/**\n * Validate a user\n *\n * @param {Object} options\n * @param {Function} callback\n * @method validateUser\n */\n\nAuth0.prototype.validateUser = function (options, callback) {\n  var protocol = 'https:';\n  var domain = this._domain;\n  var endpoint = '/public/api/users/validate_userpassword';\n  var url = joinUrl(protocol, domain, endpoint);\n\n  var query = xtend(\n    options,\n    {\n      client_id:    this._clientID,\n      username:     trim(options.username || options.email || '')\n    });\n\n  if (this._useJSONP) {\n    return jsonp(url + '?' + qs.stringify(query), jsonpOpts, function (err, resp) {\n      if (err) {\n        return callback(err);\n      }\n      if('error' in resp && resp.status !== 404) {\n        return callback(new Error(resp.error));\n      }\n      callback(null, resp.status === 200);\n    });\n  }\n\n  reqwest({\n    url:     same_origin(protocol, domain) ? endpoint : url,\n    method:  'post',\n    type:    'text',\n    data:    query,\n    crossOrigin: !same_origin(protocol, domain),\n    error: function (err) {\n      if (err.status !== 404) { return callback(new Error(err.responseText)); }\n      callback(null, false);\n    },\n    success: function (resp) {\n      callback(null, resp.status === 200);\n    }\n  });\n};\n\n/**\n * Decode Json Web Token\n *\n * @param {String} jwt\n * @method decodeJwt\n */\n\nAuth0.prototype.decodeJwt = function (jwt) {\n  var encoded = jwt && jwt.split('.')[1];\n  return json_parse(Base64Url.decode(encoded));\n};\n\n/**\n * Given the hash (or a query) of an URL returns a dictionary with only relevant\n * authentication information. If succeeds it will return the following fields:\n * `profile`, `id_token`, `access_token` and `state`. In case of error, it will\n * return `error` and `error_description`.\n *\n * @method parseHash\n * @param {String} [hash=window.location.hash] URL to be parsed\n * @example\n *      var auth0 = new Auth0({...});\n *\n *      // Returns {profile: {** decoded id token **}, state: \"good\"}\n *      auth0.parseHash('#id_token=.....&state=good&foo=bar');\n *\n *      // Returns {error: \"invalid_credentials\", error_description: undefined}\n *      auth0.parseHash('#error=invalid_credentials');\n *\n *      // Returns {error: \"invalid_credentials\", error_description: undefined}\n *      auth0.parseHash('?error=invalid_credentials');\n *\n */\n\nAuth0.prototype.parseHash = function (hash) {\n  hash = hash || window.location.hash;\n  var parsed_qs;\n  if (hash.match(/error/)) {\n    hash = hash.substr(1).replace(/^\\//, '');\n    parsed_qs = qs.parse(hash);\n    var err = {\n      error: parsed_qs.error,\n      error_description: parsed_qs.error_description\n    };\n    return err;\n  }\n  if(!hash.match(/access_token/)) {\n    // Invalid hash URL\n    return null;\n  }\n  hash = hash.substr(1).replace(/^\\//, '');\n  parsed_qs = qs.parse(hash);\n  var id_token = parsed_qs.id_token;\n  var refresh_token = parsed_qs.refresh_token;\n  var prof = this.decodeJwt(id_token);\n  var invalidJwt = function (error) {\n    var err = {\n      error: 'invalid_token',\n      error_description: error\n    };\n    return err;\n  };\n\n  // aud should be the clientID\n  var audiences = is_array(prof.aud) ? prof.aud : [ prof.aud ];\n  if (index_of(audiences, this._clientID) === -1) {\n    return invalidJwt(\n      'The clientID configured (' + this._clientID + ') does not match with the clientID set in the token (' + audiences.join(', ') + ').');\n  }\n\n  // iss should be the Auth0 domain (i.e.: https://contoso.auth0.com/)\n  if (prof.iss && prof.iss !== 'https://' + this._domain + '/') {\n    return invalidJwt(\n      'The domain configured (https://' + this._domain + '/) does not match with the domain set in the token (' + prof.iss + ').');\n  }\n\n  return {\n    accessToken: parsed_qs.access_token,\n    idToken: id_token,\n    idTokenPayload: prof,\n    refreshToken: refresh_token,\n    state: parsed_qs.state\n  };\n};\n\n/**\n * Signup\n *\n * @param {Object} options Signup Options\n * @param {String} email New user email\n * @param {String} password New user password\n *\n * @param {Function} callback\n * @method signup\n */\n\nAuth0.prototype.signup = function (options, callback) {\n  var _this = this;\n\n  var opts = {\n    client_id: this._clientID,\n    redirect_uri: this._getCallbackURL(options),\n    email: trim(options.email || options.username || ''),\n    tenant: this._domain.split('.')[0]\n  };\n\n  if (typeof options.username === 'string') {\n     opts.username = trim(options.username);\n   }\n\n  var query = xtend(this._getMode(options), options, opts);\n\n  this._configureOfflineMode(query);\n\n  // TODO Change this to a property named 'disableSSO' for consistency.\n  // By default, options.sso is true\n  if (!checkIfSet(options, 'sso')) {\n    options.sso = true;\n  }\n\n  if (!checkIfSet(options, 'auto_login')) {\n    options.auto_login = true;\n  }\n\n  var popup;\n\n  var will_popup = options.auto_login && options.popup\n    && (!this._getCallbackOnLocationHash(options) || options.sso);\n\n  if (will_popup) {\n    popup = this._buildPopupWindow(options);\n  }\n\n  function success () {\n    if (options.auto_login) {\n      return _this.login(options, callback);\n    }\n\n    if ('function' === typeof callback) {\n      return callback();\n    }\n  }\n\n  function fail (status, resp) {\n    var error = new LoginError(status, resp);\n\n    // when failed we want the popup closed if opened\n    if (popup && 'function' === typeof popup.kill) {\n      popup.kill();\n    }\n\n    if ('function' === typeof callback) {\n      return callback(error);\n    }\n\n    throw error;\n  }\n\n  var protocol = 'https:';\n  var domain = this._domain;\n  var endpoint = '/dbconnections/signup';\n  var url = joinUrl(protocol, domain, endpoint);\n\n  if (this._useJSONP) {\n    return jsonp(url + '?' + qs.stringify(query), jsonpOpts, function (err, resp) {\n      if (err) {\n        return fail(0, err);\n      }\n\n      return resp.status == 200 ? success() :\n              fail(resp.status, resp.err || resp.error);\n    });\n  }\n\n  reqwest({\n    url:     same_origin(protocol, domain) ? endpoint : url,\n    method:  'post',\n    type:    'html',\n    data:    query,\n    success: success,\n    crossOrigin: !same_origin(protocol, domain),\n    error: function (err) {\n      fail(err.status, err.responseText);\n    }\n  });\n};\n\n/**\n * Change password\n *\n * @param {Object} options\n * @param {Function} callback\n * @method changePassword\n */\n\nAuth0.prototype.changePassword = function (options, callback) {\n  var query = {\n    tenant:         this._domain.split('.')[0],\n    client_id:      this._clientID,\n    connection:     options.connection,\n    email:          trim(options.email || '')\n  };\n\n  if (typeof options.password === \"string\") {\n    query.password = options.password;\n  }\n\n  function fail (status, resp) {\n    var error = new LoginError(status, resp);\n    if (callback) {\n      return callback(error);\n    }\n  }\n\n  var protocol = 'https:';\n  var domain = this._domain;\n  var endpoint = '/dbconnections/change_password';\n  var url = joinUrl(protocol, domain, endpoint);\n\n  if (this._useJSONP) {\n    return jsonp(url + '?' + qs.stringify(query), jsonpOpts, function (err, resp) {\n      if (err) {\n        return fail(0, err);\n      }\n      return resp.status == 200 ?\n              callback(null, resp.message) :\n              fail(resp.status, resp.err || resp.error);\n    });\n  }\n\n  reqwest({\n    url:     same_origin(protocol, domain) ? endpoint : url,\n    method:  'post',\n    type:    'html',\n    data:    query,\n    crossOrigin: !same_origin(protocol, domain),\n    error: function (err) {\n      fail(err.status, err.responseText);\n    },\n    success: function (r) {\n      callback(null, r);\n    }\n  });\n};\n\n/**\n * Builds query string to be passed to /authorize based on dict key and values.\n *\n * @param {Array} args\n * @param {Array} blacklist\n * @private\n */\n\nAuth0.prototype._buildAuthorizeQueryString = function (args, blacklist) {\n  var query = this._buildAuthorizationParameters(args, blacklist);\n  return qs.stringify(query);\n};\n\n/**\n * Builds parameter dictionary to be passed to /authorize based on dict key and values.\n *\n * @param {Array} args\n * @param {Array} blacklist\n * @private\n */\n\nAuth0.prototype._buildAuthorizationParameters = function(args, blacklist) {\n  var query = xtend.apply(null, args);\n\n  // Adds offline mode to the query\n  this._configureOfflineMode(query);\n\n  // Adds client SDK information (when enabled)\n  if ( this._sendClientInfo ) query['auth0Client'] = this._getClientInfoString();\n\n  // Elements to filter from query string\n  blacklist = blacklist || ['popup', 'popupOptions'];\n\n  var i, key;\n\n  for (i = 0; i < blacklist.length; i++) {\n    key = blacklist[i];\n    delete query[key];\n  }\n\n  if (query.connection_scope && is_array(query.connection_scope)){\n    query.connection_scope = query.connection_scope.join(',');\n  }\n\n  return query;\n};\n\n/**\n * Login user\n *\n * @param {Object} options\n * @param {Function} callback\n * @method login\n */\n\nAuth0.prototype.login = Auth0.prototype.signin = function (options, callback) {\n  // TODO Change this to a property named 'disableSSO' for consistency.\n  // By default, options.sso is true\n  if (!checkIfSet(options, 'sso')) {\n    options.sso = true;\n  }\n\n  if (typeof options.passcode !== 'undefined') {\n    return this.loginWithPasscode(options, callback);\n  }\n\n  if (typeof options.username !== 'undefined' ||\n      typeof options.email !== 'undefined') {\n    return this.loginWithUsernamePassword(options, callback);\n  }\n\n  if (!!window.cordova || !!window.electron) {\n    return this.loginPhonegap(options, callback);\n  }\n\n  if (!!options.popup && this._getCallbackOnLocationHash(options)) {\n    return this.loginWithPopup(options, callback);\n  }\n\n  this._authorize(options);\n};\n\nAuth0.prototype._authorize = function(options) {\n  var qs = [\n    this._getMode(options),\n    options,\n    {\n      client_id: this._clientID,\n      redirect_uri: this._getCallbackURL(options)\n    }\n  ];\n\n  var query = this._buildAuthorizeQueryString(qs);\n\n  var url = joinUrl('https:', this._domain, '/authorize?' + query);\n\n  if (options.popup) {\n    this._buildPopupWindow(options, url);\n  } else {\n    this._redirect(url);\n  }\n};\n\n/**\n * Compute `options.width` and `options.height` for the popup to\n * open and return and extended object with optimal `top` and `left`\n * position arguments for the popup windows\n *\n * @param {Object} options\n * @private\n */\n\nAuth0.prototype._computePopupPosition = function (options) {\n  options = options || {};\n  var width = options.width || 500;\n  var height = options.height || 600;\n\n  var screenX = typeof window.screenX !== 'undefined' ? window.screenX : window.screenLeft;\n  var screenY = typeof window.screenY !== 'undefined' ? window.screenY : window.screenTop;\n  var outerWidth = typeof window.outerWidth !== 'undefined' ? window.outerWidth : document.body.clientWidth;\n  var outerHeight = typeof window.outerHeight !== 'undefined' ? window.outerHeight : (document.body.clientHeight - 22);\n  // XXX: what is the 22?\n\n  // Use `outerWidth - width` and `outerHeight - height` for help in\n  // positioning the popup centered relative to the current window\n  var left = screenX + (outerWidth - width) / 2;\n  var top = screenY + (outerHeight - height) / 2;\n\n  return { width: width, height: height, left: left, top: top };\n};\n\n/**\n * loginPhonegap method is triggered when !!window.cordova is true.\n *\n * @method loginPhonegap\n * @private\n * @param {Object}    options   Login options.\n * @param {Function}  callback  To be called after login happened. Callback arguments\n *                              should be:\n *                              function (err, profile, idToken, accessToken, state)\n *\n * @example\n *      var auth0 = new Auth0({ clientId: '...', domain: '...'});\n *\n *      auth0.signin({}, function (err, profile, idToken, accessToken, state) {\n *        if (err) {\n *         alert(err);\n *         return;\n *        }\n *\n *        alert('Welcome ' + profile.name);\n *      });\n */\n\nAuth0.prototype.loginPhonegap = function (options, callback) {\n  if (this._shouldAuthenticateWithCordovaPlugin(options.connection)) {\n    this._socialPhonegapLogin(options, callback);\n    return;\n  }\n\n  var mobileCallbackURL = joinUrl('https:', this._domain, '/mobile');\n  var _this = this;\n  var qs = [\n    this._getMode(options),\n    options,\n    {\n      client_id: this._clientID,\n      redirect_uri: mobileCallbackURL\n    }\n  ];\n\n  if ( this._sendClientInfo ) {\n    qs.push({ auth0Client: this._getClientInfoString() });\n  }\n\n  var query = this._buildAuthorizeQueryString(qs);\n\n  var popupUrl = joinUrl('https:', this._domain, '/authorize?' + query);\n\n  var popupOptions = xtend({location: 'yes'} ,\n    options.popupOptions);\n\n  // This wasn't send before so we don't send it now either\n  delete popupOptions.width;\n  delete popupOptions.height;\n\n  var ref = this.openWindow(popupUrl, '_blank', popupOptions);\n  var answered = false;\n\n  function errorHandler(event) {\n    if (answered) { return; }\n    answered = true;\n    ref.close();\n    callback(new Error(event.message), null);\n  }\n\n  function startHandler(event) {\n    if (answered) { return; }\n\n    if ( event.url && !(event.url.indexOf(mobileCallbackURL + '#') === 0 ||\n                       event.url.indexOf(mobileCallbackURL + '?') === 0)) { return; }\n\n    var result = _this.parseHash(event.url.slice(mobileCallbackURL.length));\n\n    if (!result) {\n      answered = true;\n      ref.close();\n      callback(new Error('Error parsing hash'), null);\n      return;\n    }\n\n    if (result.idToken) {\n      answered = true;\n      ref.close();\n      callback(null, result);\n      return;\n    }\n\n\n    // Case where we've found an error\n    answered = true;\n    ref.close();\n    callback(new Error(result.err || result.error || 'Something went wrong'), null);\n  }\n\n  function exitHandler() {\n    if (answered) { return; }\n\n    ref.removeEventListener('loaderror', errorHandler);\n    ref.removeEventListener('loadstart', startHandler);\n    ref.removeEventListener('exit', exitHandler);\n\n    callback(new Error('Browser window closed'), null);\n  }\n\n  ref.addEventListener('loaderror', errorHandler);\n  ref.addEventListener('loadstart', startHandler);\n  ref.addEventListener('exit', exitHandler);\n\n};\n\n/**\n * loginWithPopup method is triggered when login method receives a {popup: true} in\n * the login options.\n *\n * @method loginWithPopup\n * @param {Object}   options    Login options.\n * @param {function} callback   To be called after login happened (whether\n *                              success or failure). This parameter is mandatory when\n *                              option callbackOnLocationHash is truthy but should not\n *                              be used when falsy.\n * @example\n *       var auth0 = new Auth0({ clientId: '...', domain: '...', callbackOnLocationHash: true });\n *\n *       // Error! No callback\n *       auth0.login({popup: true});\n *\n *       // Ok!\n *       auth0.login({popup: true}, function () { });\n *\n * @example\n *       var auth0 = new Auth0({ clientId: '...', domain: '...'});\n *\n *       // Ok!\n *       auth0.login({popup: true});\n *\n *       // Error! No callback will be executed on response_type=code\n *       auth0.login({popup: true}, function () { });\n * @private\n */\n\nAuth0.prototype.loginWithPopup = function(options, callback) {\n  var _this = this;\n\n  if (!callback) {\n    throw new Error('popup mode should receive a mandatory callback');\n  }\n\n  var qs = [this._getMode(options), options, { client_id: this._clientID, owp: true }];\n\n  if (this._sendClientInfo) {\n    qs.push({ auth0Client: this._getClientInfoString() });\n  }\n\n  var query = this._buildAuthorizeQueryString(qs);\n  var popupUrl = joinUrl('https:', this._domain, '/authorize?' + query);\n\n  var popupPosition = this._computePopupPosition(options.popupOptions);\n  var popupOptions = xtend(popupPosition, options.popupOptions);\n\n  var popup = WinChan.open({\n    url: popupUrl,\n    relay_url: 'https://' + this._domain + '/relay.html',\n    window_features: stringifyPopupSettings(popupOptions)\n  }, function (err, result) {\n    // Eliminate `_current_popup` reference manually because\n    // Winchan removes `.kill()` method from window and also\n    // doesn't call `.kill()` by itself\n    _this._current_popup = null;\n\n    // Winchan always returns string errors, we wrap them inside Error objects\n    if (err) {\n      return callback(new LoginError(err), null, null, null, null, null);\n    }\n\n    // Handle edge case with generic error\n    if (!result) {\n      return callback(new LoginError('Something went wrong'), null, null, null, null, null);\n    }\n\n    // Handle profile retrieval from id_token and respond\n    if (result.id_token) {\n      return callback(null, _this._prepareResult(result));\n    }\n\n    // Case where the error is returned at an `err` property from the result\n    if (result.err) {\n      return callback(new LoginError(result.err.status, result.err.details || result.err), null, null, null, null, null);\n    }\n\n    // Case for sso_dbconnection_popup returning error at result.error instead of result.err\n    if (result.error) {\n      return callback(new LoginError(result.status, result.details || result), null, null, null, null, null);\n    }\n\n    // Case we couldn't match any error, we return a generic one\n    return callback(new LoginError('Something went wrong'), null, null, null, null, null);\n  });\n\n  popup.focus();\n};\n\n/**\n * _shouldAuthenticateWithCordovaPlugin method checks whether Auth0 is properly configured to\n * handle authentication of a social connnection using a phonegap plugin.\n *\n * @param {String}   connection    Name of the connection.\n * @private\n */\n\nAuth0.prototype._shouldAuthenticateWithCordovaPlugin = function(connection) {\n  var socialPlugin = this._cordovaSocialPlugins[connection];\n  return this._useCordovaSocialPlugins && !!socialPlugin;\n};\n\n/**\n * _socialPhonegapLogin performs social authentication using a phonegap plugin\n *\n * @param {String}   connection   Name of the connection.\n * @param {function} callback     To be called after login happened (whether\n *                                success or failure).\n * @private\n */\n\nAuth0.prototype._socialPhonegapLogin = function(options, callback) {\n  var socialAuthentication = this._cordovaSocialPlugins[options.connection];\n  var _this = this;\n  socialAuthentication(options.connection_scope, function(error, accessToken, extras) {\n    if (error) {\n      callback(error, null, null, null, null);\n      return;\n    }\n    var loginOptions = xtend({ access_token: accessToken }, options, extras);\n    _this.loginWithSocialAccessToken(loginOptions, callback);\n  });\n};\n\n/**\n * _phonegapFacebookLogin performs social authentication with Facebook using phonegap-facebook-plugin\n *\n * @param {Object}   scopes     FB scopes used to login. It can be an Array of String or a single String.\n *                              By default is [\"public_profile\"]\n * @param {function} callback   To be called after login happened (whether success or failure). It will\n *                              yield the accessToken and any extra information neeeded by Auth0 API\n *                              or an Error if the authentication fails. Callback should be:\n *                              function (err, accessToken, extras) { }\n * @private\n */\n\nAuth0.prototype._phonegapFacebookLogin = function(scopes, callback) {\n  if (!window.facebookConnectPlugin || !window.facebookConnectPlugin.login) {\n    callback(new Error('missing plugin phonegap-facebook-plugin'), null, null);\n    return;\n  }\n\n  var fbScopes;\n  if (scopes && is_array(scopes)){\n    fbScopes = scopes;\n  } else if (scopes) {\n    fbScopes = [scopes];\n  } else {\n    fbScopes = ['public_profile'];\n  }\n  window.facebookConnectPlugin.login(fbScopes, function (state) {\n    callback(null, state.authResponse.accessToken, {});\n  }, function(error) {\n    callback(new Error(error), null, null);\n  });\n};\n\n/**\n * This method handles the scenario where a db connection is used with\n * popup: true and sso: true.\n *\n * @private\n */\nAuth0.prototype.loginWithUsernamePasswordAndSSO = function (options, callback) {\n  var _this = this;\n  var popupPosition = this._computePopupPosition(options.popupOptions);\n  var popupOptions = xtend(popupPosition, options.popupOptions);\n\n  var popup = WinChan.open({\n    url: 'https://' + this._domain + '/sso_dbconnection_popup/' + this._clientID,\n    relay_url: 'https://' + this._domain + '/relay.html',\n    window_features: stringifyPopupSettings(popupOptions),\n    popup: this._current_popup,\n    params: {\n      domain:                 this._domain,\n      clientID:               this._clientID,\n      options: {\n        // TODO What happens with i18n?\n        username:   trim(options.username || options.email || ''),\n        password:   options.password,\n        connection: options.connection,\n        state:      options.state,\n        scope:      options.scope\n      }\n    }\n  }, function (err, result) {\n    // Eliminate `_current_popup` reference manually because\n    // Winchan removes `.kill()` method from window and also\n    // doesn't call `.kill()` by itself\n    _this._current_popup = null;\n\n    // Winchan always returns string errors, we wrap them inside Error objects\n    if (err) {\n      return callback(new LoginError(err), null, null, null, null, null);\n    }\n\n    // Handle edge case with generic error\n    if (!result) {\n      return callback(new LoginError('Something went wrong'), null, null, null, null, null);\n    }\n\n    // Handle profile retrieval from id_token and respond\n    if (result.id_token) {\n      return callback(null, _this._prepareResult(result));\n    }\n\n    // Case where the error is returned at an `err` property from the result\n    if (result.err) {\n      return callback(new LoginError(result.err.status, result.err.details || result.err), null, null, null, null, null);\n    }\n\n    // Case for sso_dbconnection_popup returning error at result.error instead of result.err\n    if (result.error) {\n      return callback(new LoginError(result.status, result.details || result), null, null, null, null, null);\n    }\n\n    // Case we couldn't match any error, we return a generic one\n    return callback(new LoginError('Something went wrong'), null, null, null, null, null);\n  });\n\n  popup.focus();\n};\n\n/**\n * Login with Resource Owner (RO)\n *\n * @param {Object} options\n * @param {Function} callback\n * @method loginWithResourceOwner\n */\n\nAuth0.prototype.loginWithResourceOwner = function (options, callback) {\n  var _this = this;\n  var query = xtend(\n    this._getMode(options),\n    options,\n    {\n      client_id:    this._clientID,\n      username:     trim(options.username || options.email || ''),\n      grant_type:   'password'\n    });\n\n  this._configureOfflineMode(query);\n\n  var protocol = 'https:';\n  var domain = this._domain;\n  var endpoint = '/oauth/ro';\n  var url = joinUrl(protocol, domain, endpoint);\n\n  if ( this._sendClientInfo && this._useJSONP ) {\n    query['auth0Client'] = this._getClientInfoString();\n  }\n\n  if (this._useJSONP) {\n    return jsonp(url + '?' + qs.stringify(query), jsonpOpts, function (err, resp) {\n      if (err) {\n        return callback(err);\n      }\n      if('error' in resp) {\n        var error = new LoginError(resp.status, resp.error);\n        return callback(error);\n      }\n      callback(null, _this._prepareResult(resp));\n    });\n  }\n\n  reqwest({\n    url:     same_origin(protocol, domain) ? endpoint : url,\n    method:  'post',\n    type:    'json',\n    data:    query,\n    headers: this._getClientInfoHeader(),\n    crossOrigin: !same_origin(protocol, domain),\n    success: function (resp) {\n      callback(null, _this._prepareResult(resp));\n    },\n    error: function (err) {\n      handleRequestError(err, callback);\n    }\n  });\n};\n\n/**\n * Login with Social Access Token\n *\n * @param {Object} options\n * @param {Function} callback\n * @method loginWithSocialAccessToken\n */\n\nAuth0.prototype.loginWithSocialAccessToken = function (options, callback) {\n  var _this = this;\n  var query = this._buildAuthorizationParameters([\n      { scope: 'openid' },\n      options,\n      { client_id: this._clientID }\n    ]);\n\n  var protocol = 'https:';\n  var domain = this._domain;\n  var endpoint = '/oauth/access_token';\n  var url = joinUrl(protocol, domain, endpoint);\n\n  if (this._useJSONP) {\n    return jsonp(url + '?' + qs.stringify(query), jsonpOpts, function (err, resp) {\n      if (err) {\n        return callback(err);\n      }\n      if('error' in resp) {\n        var error = new LoginError(resp.status, resp.error);\n        return callback(error);\n      }\n      callback(null, _this._prepareResult(resp));\n    });\n  }\n\n  reqwest({\n    url:     same_origin(protocol, domain) ? endpoint : url,\n    method:  'post',\n    type:    'json',\n    data:    query,\n    headers: this._getClientInfoHeader(),\n    crossOrigin: !same_origin(protocol, domain),\n    success: function (resp) {\n      callback(null, _this._prepareResult(resp));\n    },\n    error: function (err) {\n      handleRequestError(err, callback);\n    }\n  });\n};\n\n/**\n * Open a popup, store the winref in the instance and return it.\n *\n * We usually need to call this method before any ajax transaction in order\n * to prevent the browser to block the popup.\n *\n * @param  {[type]}   options  [description]\n * @param  {Function} callback [description]\n * @return {[type]}            [description]\n * @private\n */\n\nAuth0.prototype._buildPopupWindow = function (options, url) {\n  if (this._current_popup && !this._current_popup.closed) {\n    return this._current_popup;\n  }\n\n  url = url || 'about:blank'\n\n  var _this = this;\n  var defaults = { width: 500, height: 600 };\n  var opts = xtend(defaults, options.popupOptions || {});\n  var popupOptions = stringifyPopupSettings(opts);\n\n  this._current_popup = window.open(url, 'auth0_signup_popup', popupOptions);\n\n  if (!this._current_popup) {\n    throw new Error('Popup window cannot not been created. Disable popup blocker or make sure to call Auth0 login or singup on an UI event.');\n  }\n\n  this._current_popup.kill = function () {\n    this.close();\n    _this._current_popup = null;\n  };\n\n  return this._current_popup;\n};\n\n/**\n * Login with Username and Password\n *\n * @param {Object} options\n * @param {Function} callback\n * @method loginWithUsernamePassword\n */\n\nAuth0.prototype.loginWithUsernamePassword = function (options, callback) {\n  // XXX: Warning: This check is whether callback arguments are\n  // fn(err) case callback.length === 1 (a redirect should be performed) vs.\n  // fn(err, profile, id_token, access_token, state) callback.length > 1 (no\n  // redirect should be performed)\n  //\n  // Note: Phonegap/Cordova:\n  // As the popup is launched using the InAppBrowser plugin the SSO cookie will\n  // be set on the InAppBrowser browser. That's why the browser where the app runs\n  // won't get the sso cookie. Therefore, we don't allow username password using\n  // popup with sso: true in Cordova/Phonegap and we default to resource owner auth.\n  if (callback && callback.length > 1 && (!options.sso || window.cordova)) {\n    return this.loginWithResourceOwner(options, callback);\n  }\n\n  var _this = this;\n  var popup;\n\n  // TODO We should deprecate this, really hacky and confuses people.\n  if (options.popup  && !this._getCallbackOnLocationHash(options)) {\n    popup = this._buildPopupWindow(options);\n  }\n\n  // When a callback with more than one argument is specified and sso: true then\n  // we open a popup and do authentication there.\n  if (callback && callback.length > 1 && options.sso ) {\n    return this.loginWithUsernamePasswordAndSSO(options, callback);\n  }\n\n  var query = xtend(\n    this._getMode(options),\n    options,\n    {\n      client_id: this._clientID,\n      redirect_uri: this._getCallbackURL(options),\n      username: trim(options.username || options.email || ''),\n      tenant: this._domain.split('.')[0]\n    });\n\n  this._configureOfflineMode(query);\n\n  var protocol = 'https:';\n  var domain = this._domain;\n  var endpoint = '/usernamepassword/login';\n  var url = joinUrl(protocol, domain, endpoint);\n\n  if (this._useJSONP) {\n    return jsonp(url + '?' + qs.stringify(query), jsonpOpts, function (err, resp) {\n      if (err) {\n        if (popup && popup.kill) { popup.kill(); }\n        return callback(err);\n      }\n      if('error' in resp) {\n        if (popup && popup.kill) { popup.kill(); }\n        var error = new LoginError(resp.status, resp.error);\n        return callback(error);\n      }\n      _this._renderAndSubmitWSFedForm(options, resp.form);\n    });\n  }\n\n  function return_error (error) {\n    if (callback) {\n      return callback(error);\n    }\n    throw error;\n  }\n\n  reqwest({\n    url:     same_origin(protocol, domain) ? endpoint : url,\n    method:  'post',\n    type:    'html',\n    data:    query,\n    headers: this._getClientInfoHeader(),\n    crossOrigin: !same_origin(protocol, domain),\n    success: function (resp) {\n      _this._renderAndSubmitWSFedForm(options, resp);\n    },\n    error: function (err) {\n      if (popup && popup.kill) {\n        popup.kill();\n      }\n      handleRequestError(err, return_error);\n    }\n  });\n};\n\n/**\n * Login with phone number and passcode\n *\n * @param {Object} options\n * @param {Function} callback\n * @method loginWithPhoneNumber\n */\nAuth0.prototype.loginWithPasscode = function (options, callback) {\n\n  if (options.email == null && options.phoneNumber == null) {\n    throw new Error('email or phoneNumber is required for authentication');\n  }\n\n  if (options.passcode == null) {\n    throw new Error('passcode is required for authentication');\n  }\n\n  options.connection = options.email == null ? 'sms' : 'email';\n\n  if (!this._shouldRedirect) {\n    options = xtend(options, {\n      username: options.email == null ? options.phoneNumber : options.email,\n      password: options.passcode,\n      sso: false\n    });\n\n    delete options.email;\n    delete options.phoneNumber;\n    delete options.passcode;\n\n    return this.loginWithResourceOwner(options, callback);\n  }\n\n  var verifyOptions = {connection: options.connection};\n\n  if (options.phoneNumber) {\n    options.phone_number = options.phoneNumber;\n    delete options.phoneNumber;\n\n    verifyOptions.phone_number = options.phone_number;\n  }\n\n  if (options.email) {\n    verifyOptions.email = options.email;\n  }\n\n  options.verification_code = options.passcode;\n  delete options.passcode;\n\n  verifyOptions.verification_code = options.verification_code;\n\n  var _this = this;\n  this._verify(verifyOptions, function(error) {\n    if (error) {\n      return callback(error);\n    }\n    _this._verify_redirect(options);\n  });\n};\n\nAuth0.prototype._verify = function(options, callback) {\n  var protocol = 'https:';\n  var domain = this._domain;\n  var endpoint = '/passwordless/verify';\n  var url = joinUrl(protocol, domain, endpoint);\n\n  var data = options;\n\n  if (this._useJSONP) {\n    if (this._sendClientInfo) {\n      data['auth0Client'] = this._getClientInfoString();\n    }\n\n    return jsonp(url + '?' + qs.stringify(data), jsonpOpts, function (err, resp) {\n      if (err) {\n        return callback(new Error(0 + ': ' + err.toString()));\n      }\n      // /**/ typeof __auth0jp0 === 'function' && __auth0jp0({\"status\":400});\n      return resp.status === 200 ? callback(null, true) : callback({status: resp.status});\n    });\n  }\n\n  return reqwest({\n    url:          same_origin(protocol, domain) ? endpoint : url,\n    method:       'post',\n    headers:      this._getClientInfoHeader(),\n    crossOrigin:  !same_origin(protocol, domain),\n    data:         data\n  })\n  .fail(function (err) {\n    try {\n      callback(JSON.parse(err.responseText));\n    } catch (e) {\n      var error = new Error(err.status + '(' + err.statusText + '): ' + err.responseText);\n      error.statusCode = err.status;\n      error.error = err.statusText;\n      error.message = err.responseText;\n      callback(error);\n    }\n  })\n  .then(function (result) {\n    callback(null, result);\n  });\n}\n\nAuth0.prototype._verify_redirect = function(options) {\n  var qs = [\n    this._getMode(options),\n    options,\n    {\n      client_id: this._clientID,\n      redirect_uri: this._getCallbackURL(options)\n    }\n  ];\n\n  var query = this._buildAuthorizeQueryString(qs);\n  var url = joinUrl('https:', this._domain, '/passwordless/verify_redirect?' + query);\n\n  this._redirect(url);\n};\n\n// TODO Document me\nAuth0.prototype.renewIdToken = function (id_token, callback) {\n  this.getDelegationToken({\n    id_token: id_token,\n    scope: 'passthrough',\n    api: 'auth0'\n  }, callback);\n};\n\n// TODO Document me\nAuth0.prototype.refreshToken = function (refresh_token, callback) {\n  this.getDelegationToken({\n    refresh_token: refresh_token,\n    scope: 'passthrough',\n    api: 'auth0'\n  }, callback);\n};\n\n/**\n * Get delegation token for certain addon or certain other clientId\n *\n * @example\n *\n *     auth0.getDelegationToken({\n *      id_token:   '<user-id-token>',\n *      target:     '<app-client-id>'\n *      api_type: 'auth0'\n *     }, function (err, delegationResult) {\n *        if (err) return console.log(err.message);\n *        // Do stuff with delegation token\n *        expect(delegationResult.id_token).to.exist;\n *        expect(delegationResult.token_type).to.eql('Bearer');\n *        expect(delegationResult.expires_in).to.eql(36000);\n *     });\n *\n * @example\n *\n *      // get a delegation token from a Firebase API App\n  *     auth0.getDelegationToken({\n *      id_token:   '<user-id-token>',\n *      target:     '<app-client-id>'\n *      api_type: 'firebase'\n *     }, function (err, delegationResult) {\n *      // Use your firebase token here\n *    });\n *\n * @method getDelegationToken\n * @param {Object} [options]\n * @param {String} [id_token]\n * @param {String} [target]\n * @param {String} [api_type]\n * @param {Function} [callback]\n */\nAuth0.prototype.getDelegationToken = function (options, callback) {\n  options = options || {};\n\n  if (!options.id_token && !options.refresh_token ) {\n    throw new Error('You must send either an id_token or a refresh_token to get a delegation token.');\n  }\n\n  var query = xtend({\n    grant_type: 'urn:ietf:params:oauth:grant-type:jwt-bearer',\n    client_id:  this._clientID,\n    target: options.targetClientId || this._clientID,\n    api_type: options.api\n  }, options);\n\n  delete query.hasOwnProperty;\n  delete query.targetClientId;\n  delete query.api;\n\n  var protocol = 'https:';\n  var domain = this._domain;\n  var endpoint = '/delegation';\n  var url = joinUrl(protocol, domain, endpoint);\n\n  if (this._useJSONP) {\n    return jsonp(url + '?' + qs.stringify(query), jsonpOpts, function (err, resp) {\n      if (err) {\n        return callback(err);\n      }\n      if('error' in resp) {\n        var error = new LoginError(resp.status, resp.error_description || resp.error);\n        return callback(error);\n      }\n      callback(null, resp);\n    });\n  }\n\n  reqwest({\n    url:     same_origin(protocol, domain) ? endpoint : url,\n    method:  'post',\n    type:    'json',\n    data:    query,\n    crossOrigin: !same_origin(protocol, domain),\n    success: function (resp) {\n      callback(null, resp);\n    },\n    error: function (err) {\n      try {\n        callback(JSON.parse(err.responseText));\n      }\n      catch (e) {\n        var er = err;\n        var isAffectedIEVersion = isInternetExplorer() === 10 || isInternetExplorer() === 11;\n        var zeroStatus = (!er.status || er.status === 0);\n\n        // Request failed because we are offline.\n        // See: http://caniuse.com/#search=navigator.onLine\n        if (zeroStatus && !window.navigator.onLine) {\n          er = {};\n          er.status = 0;\n          er.responseText = {\n            code: 'offline'\n          };\n        // http://stackoverflow.com/questions/23229723/ie-10-11-cors-status-0\n        // XXX IE10 when a request fails in CORS returns status code 0\n        // XXX This is not handled by handleRequestError as the errors are different\n        } else if (zeroStatus && isAffectedIEVersion) {\n          er = {};\n          er.status = 401;\n          er.responseText = {\n            code: 'invalid_operation'\n          };\n        // If not IE10/11 and not offline it means that Auth0 host is unreachable:\n        // Connection Timeout or Connection Refused.\n        } else if (zeroStatus) {\n          er = {};\n          er.status = 0;\n          er.responseText = {\n            code: 'connection_refused_timeout'\n          };\n        } else {\n          er.responseText = err;\n        }\n        callback(new LoginError(er.status, er.responseText));\n      }\n    }\n  });\n};\n\n/**\n * Trigger logout redirect with\n * params from `query` object\n *\n * @example\n *\n *     auth0.logout();\n *     // redirects to -> 'https://yourapp.auth0.com/logout'\n *\n * @example\n *\n *     auth0.logout({returnTo: 'http://logout'});\n *     // redirects to -> 'https://yourapp.auth0.com/logout?returnTo=http://logout'\n *\n * @method logout\n * @param {Object} query\n */\n\nAuth0.prototype.logout = function (query) {\n  var url = joinUrl('https:', this._domain, '/logout');\n  if (query) {\n    url += '?' + qs.stringify(query);\n  }\n  this._redirect(url);\n};\n\n/**\n * Get single sign on Data\n *\n * @example\n *\n *     auth0.getSSOData(function (err, ssoData) {\n *       if (err) return console.log(err.message);\n *       expect(ssoData.sso).to.exist;\n *     });\n *\n * @example\n *\n *     auth0.getSSOData(false, fn);\n *\n * @method getSSOData\n * @param {Boolean} withActiveDirectories\n * @param {Function} cb\n */\n\nAuth0.prototype.getSSOData = function (withActiveDirectories, cb) {\n  if (typeof withActiveDirectories === 'function') {\n    cb = withActiveDirectories;\n    withActiveDirectories = false;\n  }\n\n  var noResult = {sso: false};\n\n  if (this._useJSONP) {\n    var error = new Error(\"The SSO data can't be obtained using JSONP\");\n    setTimeout(function() { cb(error, noResult) }, 0);\n    return;\n  }\n\n  var protocol = 'https:';\n  var domain = this._domain;\n  var endpoint = '/user/ssodata';\n  var url = joinUrl(protocol, domain, endpoint);\n  var sameOrigin = same_origin(protocol, domain);\n  var data = {};\n\n  if (withActiveDirectories) {\n    data = {ldaps: 1, client_id: this._clientID};\n  }\n\n  return reqwest({\n    url:             sameOrigin ? endpoint : url,\n    method:          'get',\n    type:            'json',\n    data:            data,\n    crossOrigin:     !sameOrigin,\n    withCredentials: !sameOrigin,\n    timeout:         3000\n  }).fail(function(err) {\n    var error = new Error(\"There was an error in the request that obtains the user's SSO data.\");\n    error.cause = err;\n    cb(error, noResult);\n  }).then(function(resp) {\n    cb(null, resp);\n  });\n};\n\n/**\n * Get all configured connections for a client\n *\n * @example\n *\n *     auth0.getConnections(function (err, conns) {\n *       if (err) return console.log(err.message);\n *       expect(conns.length).to.be.above(0);\n *       expect(conns[0].name).to.eql('Apprenda.com');\n *       expect(conns[0].strategy).to.eql('adfs');\n *       expect(conns[0].status).to.eql(false);\n *       expect(conns[0].domain).to.eql('Apprenda.com');\n *       expect(conns[0].domain_aliases).to.eql(['Apprenda.com', 'foo.com', 'bar.com']);\n *     });\n *\n * @method getConnections\n * @param {Function} callback\n */\n// XXX We may change the way this method works in the future to use client's s3 file.\n\nAuth0.prototype.getConnections = function (callback) {\n  return jsonp('https://' + this._domain + '/public/api/' + this._clientID + '/connections', jsonpOpts, callback);\n};\n\n/**\n * Send email or SMS to do passwordless authentication\n *\n * @example\n *     // To send an email\n *     auth0.startPasswordless({email: 'foo@bar.com'}, function (err, result) {\n *       if (err) return console.log(err.error_description);\n *       console.log(result);\n *     });\n *\n * @example\n *     // To send a SMS\n *     auth0.startPasswordless({phoneNumber: '+14251112222'}, function (err, result) {\n *       if (err) return console.log(err.error_description);\n *       console.log(result);\n *     });\n *\n * @method startPasswordless\n * @param {Object} options\n * @param {Function} callback\n */\n\nAuth0.prototype.startPasswordless = function (options, callback) {\n  if ('object' !== typeof options) {\n    throw new Error('An options object is required');\n  }\n  if ('function' !== typeof callback) {\n    throw new Error('A callback function is required');\n  }\n  if (!options.email && !options.phoneNumber) {\n    throw new Error('An `email` or a `phoneNumber` is required.');\n  }\n\n  var protocol = 'https:';\n  var domain = this._domain;\n  var endpoint = '/passwordless/start';\n  var url = joinUrl(protocol, domain, endpoint);\n\n  var data = {client_id: this._clientID};\n  if (options.email) {\n    data.email = options.email;\n    data.connection = 'email';\n    if (options.authParams) {\n      data.authParams = options.authParams;\n    }\n\n    if (!options.send || options.send === \"link\") {\n      if (!data.authParams) {\n        data.authParams = {};\n      }\n\n      data.authParams.redirect_uri = this._callbackURL;\n      data.authParams.response_type = this._shouldRedirect && !this._callbackOnLocationHash ?\n        \"code\" : \"token\";\n    }\n\n    if (options.send) {\n      data.send = options.send;\n    }\n  } else {\n    data.phone_number = options.phoneNumber;\n    data.connection = 'sms';\n  }\n\n  if (this._useJSONP) {\n    if (this._sendClientInfo) {\n      data['auth0Client'] = this._getClientInfoString();\n    }\n\n    return jsonp(url + '?' + qs.stringify(data), jsonpOpts, function (err, resp) {\n      if (err) {\n        return callback(new Error(0 + ': ' + err.toString()));\n      }\n      return resp.status === 200 ? callback(null, true) : callback(resp.err || resp.error);\n    });\n  }\n\n  return reqwest({\n    url:          same_origin(protocol, domain) ? endpoint : url,\n    method:       'post',\n    type:         'json',\n    headers:      this._getClientInfoHeader(),\n    crossOrigin:  !same_origin(protocol, domain),\n    data:         data\n  })\n  .fail(function (err) {\n    try {\n      callback(JSON.parse(err.responseText));\n    } catch (e) {\n      var error = new Error(err.status + '(' + err.statusText + '): ' + err.responseText);\n      error.statusCode = err.status;\n      error.error = err.statusText;\n      error.message = err.responseText;\n      callback(error);\n    }\n  })\n  .then(function (result) {\n    callback(null, result);\n  });\n};\n\nAuth0.prototype.requestMagicLink = function(attrs, cb) {\n  return this.startPasswordless(attrs, cb);\n};\n\nAuth0.prototype.requestEmailCode = function(attrs, cb) {\n  attrs.send = \"code\";\n  return this.startPasswordless(attrs, cb);\n};\n\nAuth0.prototype.verifyEmailCode = function(attrs, cb) {\n  attrs.passcode = attrs.code;\n  delete attrs.code;\n  return this.login(attrs, cb);\n};\n\nAuth0.prototype.requestSMSCode = function(attrs, cb) {\n  return this.startPasswordless(attrs, cb);\n};\n\nAuth0.prototype.verifySMSCode = function(attrs, cb) {\n  attrs.passcode = attrs.code;\n  delete attrs.code;\n  return this.login(attrs, cb);\n};\n\n/**\n * Returns the ISO 3166-1 code for the country where the request is\n * originating.\n *\n * Fails if the request has to be made using JSONP.\n *\n * @private\n */\nAuth0.prototype.getUserCountry = function(cb) {\n  var protocol = 'https:';\n  var domain = this._domain;\n  var endpoint = \"/user/geoloc/country\";\n  var url = joinUrl(protocol, domain, endpoint);\n\n  if (this._useJSONP) {\n    var error = new Error(\"The user's country can't be obtained using JSONP\");\n    setTimeout(function() { cb(error) }, 0);\n    return;\n  }\n\n  reqwest({\n    url: same_origin(protocol, domain) ? endpoint : url,\n    method: \"get\",\n    type: \"json\",\n    headers: this._getClientInfoHeader(),\n    crossOrigin: !same_origin(protocol, domain),\n    success: function(resp) {\n      cb(null, resp.country_code)\n    },\n    error: function(err) {\n      var error = new Error(\"There was an error in the request that obtains the user's country\");\n      error.cause = err;\n      cb(error);\n    }\n  });\n}\n\nAuth0.prototype._prepareResult = function(result) {\n  if (!result || typeof result !== \"object\") {\n    return;\n  }\n\n  var idTokenPayload = result.profile\n    ? result.profile\n    : this.decodeJwt(result.id_token);\n\n  return {\n    accessToken: result.access_token,\n    idToken: result.id_token,\n    idTokenPayload: idTokenPayload,\n    refreshToken: result.refresh_token,\n    state: result.state\n  };\n}\n\n/**\n * Expose `Auth0` constructor\n */\n\nmodule.exports = Auth0;\n\n/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/auth0-js/index.js\n ** module id = 10\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/auth0-js/index.js?");

/***/ },
/* 11 */
/*!**************************************!*\
  !*** ./~/auth0-js/lib/base64_url.js ***!
  \**************************************/
/***/ function(module, exports, __webpack_require__) {

	eval("/**\n * Module dependencies.\n */\n\nvar Base64 = __webpack_require__(/*! Base64 */ 12);\n\n/**\n * Expose `base64_url_decode`\n */\n\nmodule.exports = {\n  encode: encode,\n  decode: decode\n};\n\n/**\n * Encode a `base64` `encodeURIComponent` string\n *\n * @param {string} str\n * @public\n */\n\nfunction encode(str) {\n  return Base64.btoa(str)\n      .replace(/\\+/g, '-') // Convert '+' to '-'\n      .replace(/\\//g, '_') // Convert '/' to '_'\n      .replace(/=+$/, ''); // Remove ending '='\n}\n\n/**\n * Decode a `base64` `encodeURIComponent` string\n *\n * @param {string} str\n * @public\n */\n\nfunction decode(str) {\n  // Add removed at end '='\n  str += Array(5 - str.length % 4).join('=');\n\n  str = str\n    .replace(/\\-/g, '+') // Convert '-' to '+'\n    .replace(/\\_/g, '/'); // Convert '_' to '/'\n\n  return Base64.atob(str);\n}\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/auth0-js/lib/base64_url.js\n ** module id = 11\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/auth0-js/lib/base64_url.js?");

/***/ },
/* 12 */
/*!****************************!*\
  !*** ./~/Base64/base64.js ***!
  \****************************/
/***/ function(module, exports, __webpack_require__) {

	eval(";(function () {\n\n  var\n    object =  true ? exports : this, // #8: web workers\n    chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=',\n    INVALID_CHARACTER_ERR = (function () {\n      // fabricate a suitable error object\n      try { document.createElement('$'); }\n      catch (error) { return error; }}());\n\n  // encoder\n  // [https://gist.github.com/999166] by [https://github.com/nignag]\n  object.btoa || (\n  object.btoa = function (input) {\n    for (\n      // initialize result and counter\n      var block, charCode, idx = 0, map = chars, output = '';\n      // if the next input index does not exist:\n      //   change the mapping table to \"=\"\n      //   check if d has no fractional digits\n      input.charAt(idx | 0) || (map = '=', idx % 1);\n      // \"8 - idx % 1 * 8\" generates the sequence 2, 4, 6, 8\n      output += map.charAt(63 & block >> 8 - idx % 1 * 8)\n    ) {\n      charCode = input.charCodeAt(idx += 3/4);\n      if (charCode > 0xFF) throw INVALID_CHARACTER_ERR;\n      block = block << 8 | charCode;\n    }\n    return output;\n  });\n\n  // decoder\n  // [https://gist.github.com/1020396] by [https://github.com/atk]\n  object.atob || (\n  object.atob = function (input) {\n    input = input.replace(/=+$/, '')\n    if (input.length % 4 == 1) throw INVALID_CHARACTER_ERR;\n    for (\n      // initialize result and counters\n      var bc = 0, bs, buffer, idx = 0, output = '';\n      // get next character\n      buffer = input.charAt(idx++);\n      // character found in table? initialize bit storage and add its ascii value;\n      ~buffer && (bs = bc % 4 ? bs * 64 + buffer : buffer,\n        // and if not first of each 4 characters,\n        // convert the first 8 bits to one ascii character\n        bc++ % 4) ? output += String.fromCharCode(255 & bs >> (-2 * bc & 6)) : 0\n    ) {\n      // try to find character in table (0-63, not found => -1)\n      buffer = chars.indexOf(buffer);\n    }\n    return output;\n  });\n\n}());\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/Base64/base64.js\n ** module id = 12\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/Base64/base64.js?");

/***/ },
/* 13 */
/*!*******************************************!*\
  !*** ./~/auth0-js/lib/assert_required.js ***!
  \*******************************************/
/***/ function(module, exports) {

	eval("/**\n * Expose `required`\n */\n\nmodule.exports = required;\n\n/**\n * Assert `prop` as requirement of `obj`\n *\n * @param {Object} obj\n * @param {prop} prop\n * @public\n */\n\nfunction required (obj, prop) {\n  if (!obj[prop]) {\n    throw new Error(prop + ' is required.');\n  }\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/auth0-js/lib/assert_required.js\n ** module id = 13\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/auth0-js/lib/assert_required.js?");

/***/ },
/* 14 */
/*!************************************!*\
  !*** ./~/auth0-js/lib/is-array.js ***!
  \************************************/
/***/ function(module, exports) {

	eval("/**\n * Module dependencies.\n */\n\nvar toString = Object.prototype.toString;\n\n/**\n * Resolve `isArray` as native or fallback\n */\n\nmodule.exports = null != Array.isArray\n  ? Array.isArray\n  : isArray;\n\n/**\n * Wrap `Array.isArray` Polyfill for IE9\n * source: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/isArray\n *\n * @param {Array} array\n * @public\n */\n\nfunction isArray (array) {\n  return toString.call(array) === '[object Array]';\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/auth0-js/lib/is-array.js\n ** module id = 14\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/auth0-js/lib/is-array.js?");

/***/ },
/* 15 */
/*!************************************!*\
  !*** ./~/auth0-js/lib/index-of.js ***!
  \************************************/
/***/ function(module, exports) {

	eval("/**\n * Resolve `isArray` as native or fallback\n */\n\nmodule.exports = Array.prototype.indexOf\n  ? nativeIndexOf\n  : polyfillIndexOf;\n\n\nfunction nativeIndexOf(array, searchElement, fromIndex) {\n  return array.indexOf(searchElement, fromIndex);\n}\n\n\nfunction polyfillIndexOf(array, searchElement, fromIndex) {\n  // Production steps of ECMA-262, Edition 5, 15.4.4.14\n  // Reference: http://es5.github.io/#x15.4.4.14\n\n  var k;\n\n  // 1. Let O be the result of calling ToObject passing\n  //    the array value as the argument.\n  if (array == null) {\n    throw new TypeError('\"array\" is null or not defined');\n  }\n\n  var O = Object(array);\n\n  // 2. Let lenValue be the result of calling the Get\n  //    internal method of O with the argument \"length\".\n  // 3. Let len be ToUint32(lenValue).\n  var len = O.length >>> 0;\n\n  // 4. If len is 0, return -1.\n  if (len === 0) {\n    return -1;\n  }\n\n  // 5. If argument fromIndex was passed let n be\n  //    ToInteger(fromIndex); else let n be 0.\n  var n = +fromIndex || 0;\n\n  if (Math.abs(n) === Infinity) {\n    n = 0;\n  }\n\n  // 6. If n >= len, return -1.\n  if (n >= len) {\n    return -1;\n  }\n\n  // 7. If n >= 0, then Let k be n.\n  // 8. Else, n<0, Let k be len - abs(n).\n  //    If k is less than 0, then let k be 0.\n  k = Math.max(n >= 0 ? n : len - Math.abs(n), 0);\n\n  // 9. Repeat, while k < len\n  while (k < len) {\n    // a. Let Pk be ToString(k).\n    //   This is implicit for LHS operands of the in operator\n    // b. Let kPresent be the result of calling the\n    //    HasProperty internal method of O with argument Pk.\n    //   This step can be combined with c\n    // c. If kPresent is true, then\n    //    i.  Let elementK be the result of calling the Get\n    //        internal method of O with the argument ToString(k).\n    //   ii.  Let same be the result of applying the\n    //        Strict Equality Comparison Algorithm to\n    //        searchElement and elementK.\n    //  iii.  If same is true, return k.\n    if (k in O && O[k] === searchElement) {\n      return k;\n    }\n    k++;\n  }\n  return -1;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/auth0-js/lib/index-of.js\n ** module id = 15\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/auth0-js/lib/index-of.js?");

/***/ },
/* 16 */
/*!***********************!*\
  !*** ./~/qs/index.js ***!
  \***********************/
/***/ function(module, exports) {

	eval("/**\n * Object#toString() ref for stringify().\n */\n\nvar toString = Object.prototype.toString;\n\n/**\n * Object#hasOwnProperty ref\n */\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * Array#indexOf shim.\n */\n\nvar indexOf = typeof Array.prototype.indexOf === 'function'\n  ? function(arr, el) { return arr.indexOf(el); }\n  : function(arr, el) {\n      if (typeof arr == 'string' && typeof \"a\"[0] == 'undefined') {\n        arr = arr.split('');\n      }\n      for (var i = 0; i < arr.length; i++) {\n        if (arr[i] === el) return i;\n      }\n      return -1;\n    };\n\n/**\n * Array.isArray shim.\n */\n\nvar isArray = Array.isArray || function(arr) {\n  return toString.call(arr) == '[object Array]';\n};\n\n/**\n * Object.keys shim.\n */\n\nvar objectKeys = Object.keys || function(obj) {\n  var ret = [];\n  for (var key in obj) {\n    if (obj.hasOwnProperty(key)) {\n      ret.push(key);\n    }\n  }\n  return ret;\n};\n\n/**\n * Array#forEach shim.\n */\n\nvar forEach = typeof Array.prototype.forEach === 'function'\n  ? function(arr, fn) { return arr.forEach(fn); }\n  : function(arr, fn) {\n      for (var i = 0; i < arr.length; i++) fn(arr[i]);\n    };\n\n/**\n * Array#reduce shim.\n */\n\nvar reduce = function(arr, fn, initial) {\n  if (typeof arr.reduce === 'function') return arr.reduce(fn, initial);\n  var res = initial;\n  for (var i = 0; i < arr.length; i++) res = fn(res, arr[i]);\n  return res;\n};\n\n/**\n * Cache non-integer test regexp.\n */\n\nvar isint = /^[0-9]+$/;\n\nfunction promote(parent, key) {\n  if (parent[key].length == 0) return parent[key] = {}\n  var t = {};\n  for (var i in parent[key]) {\n    if (hasOwnProperty.call(parent[key], i)) {\n      t[i] = parent[key][i];\n    }\n  }\n  parent[key] = t;\n  return t;\n}\n\nfunction parse(parts, parent, key, val) {\n  var part = parts.shift();\n\n  // illegal\n  if (hasOwnProperty.call(Object.prototype, key)) return;\n\n  // end\n  if (!part) {\n    if (isArray(parent[key])) {\n      parent[key].push(val);\n    } else if ('object' == typeof parent[key]) {\n      parent[key] = val;\n    } else if ('undefined' == typeof parent[key]) {\n      parent[key] = val;\n    } else {\n      parent[key] = [parent[key], val];\n    }\n    // array\n  } else {\n    var obj = parent[key] = parent[key] || [];\n    if (']' == part) {\n      if (isArray(obj)) {\n        if ('' != val) obj.push(val);\n      } else if ('object' == typeof obj) {\n        obj[objectKeys(obj).length] = val;\n      } else {\n        obj = parent[key] = [parent[key], val];\n      }\n      // prop\n    } else if (~indexOf(part, ']')) {\n      part = part.substr(0, part.length - 1);\n      if (!isint.test(part) && isArray(obj)) obj = promote(parent, key);\n      parse(parts, obj, part, val);\n      // key\n    } else {\n      if (!isint.test(part) && isArray(obj)) obj = promote(parent, key);\n      parse(parts, obj, part, val);\n    }\n  }\n}\n\n/**\n * Merge parent key/val pair.\n */\n\nfunction merge(parent, key, val){\n  if (~indexOf(key, ']')) {\n    var parts = key.split('[')\n      , len = parts.length\n      , last = len - 1;\n    parse(parts, parent, 'base', val);\n    // optimize\n  } else {\n    if (!isint.test(key) && isArray(parent.base)) {\n      var t = {};\n      for (var k in parent.base) t[k] = parent.base[k];\n      parent.base = t;\n    }\n    set(parent.base, key, val);\n  }\n\n  return parent;\n}\n\n/**\n * Compact sparse arrays.\n */\n\nfunction compact(obj) {\n  if ('object' != typeof obj) return obj;\n\n  if (isArray(obj)) {\n    var ret = [];\n\n    for (var i in obj) {\n      if (hasOwnProperty.call(obj, i)) {\n        ret.push(obj[i]);\n      }\n    }\n\n    return ret;\n  }\n\n  for (var key in obj) {\n    obj[key] = compact(obj[key]);\n  }\n\n  return obj;\n}\n\n/**\n * Parse the given obj.\n */\n\nfunction parseObject(obj){\n  var ret = { base: {} };\n\n  forEach(objectKeys(obj), function(name){\n    merge(ret, name, obj[name]);\n  });\n\n  return compact(ret.base);\n}\n\n/**\n * Parse the given str.\n */\n\nfunction parseString(str, options){\n  var ret = reduce(String(str).split(options.separator), function(ret, pair){\n    var eql = indexOf(pair, '=')\n      , brace = lastBraceInKey(pair)\n      , key = pair.substr(0, brace || eql)\n      , val = pair.substr(brace || eql, pair.length)\n      , val = val.substr(indexOf(val, '=') + 1, val.length);\n\n    // ?foo\n    if ('' == key) key = pair, val = '';\n    if ('' == key) return ret;\n\n    return merge(ret, decode(key), decode(val));\n  }, { base: {} }).base;\n\n  return compact(ret);\n}\n\n/**\n * Parse the given query `str` or `obj`, returning an object.\n *\n * @param {String} str | {Object} obj\n * @return {Object}\n * @api public\n */\n\nexports.parse = function(str, options){\n  if (null == str || '' == str) return {};\n  options = options || {};\n  options.separator = options.separator || '&';\n  return 'object' == typeof str\n    ? parseObject(str)\n    : parseString(str, options);\n};\n\n/**\n * Turn the given `obj` into a query string\n *\n * @param {Object} obj\n * @return {String}\n * @api public\n */\n\nvar stringify = exports.stringify = function(obj, prefix) {\n  if (isArray(obj)) {\n    return stringifyArray(obj, prefix);\n  } else if ('[object Object]' == toString.call(obj)) {\n    return stringifyObject(obj, prefix);\n  } else if ('string' == typeof obj) {\n    return stringifyString(obj, prefix);\n  } else {\n    return prefix + '=' + encodeURIComponent(String(obj));\n  }\n};\n\n/**\n * Stringify the given `str`.\n *\n * @param {String} str\n * @param {String} prefix\n * @return {String}\n * @api private\n */\n\nfunction stringifyString(str, prefix) {\n  if (!prefix) throw new TypeError('stringify expects an object');\n  return prefix + '=' + encodeURIComponent(str);\n}\n\n/**\n * Stringify the given `arr`.\n *\n * @param {Array} arr\n * @param {String} prefix\n * @return {String}\n * @api private\n */\n\nfunction stringifyArray(arr, prefix) {\n  var ret = [];\n  if (!prefix) throw new TypeError('stringify expects an object');\n  for (var i = 0; i < arr.length; i++) {\n    ret.push(stringify(arr[i], prefix + '[' + i + ']'));\n  }\n  return ret.join('&');\n}\n\n/**\n * Stringify the given `obj`.\n *\n * @param {Object} obj\n * @param {String} prefix\n * @return {String}\n * @api private\n */\n\nfunction stringifyObject(obj, prefix) {\n  var ret = []\n    , keys = objectKeys(obj)\n    , key;\n\n  for (var i = 0, len = keys.length; i < len; ++i) {\n    key = keys[i];\n    if ('' == key) continue;\n    if (null == obj[key]) {\n      ret.push(encodeURIComponent(key) + '=');\n    } else {\n      ret.push(stringify(obj[key], prefix\n        ? prefix + '[' + encodeURIComponent(key) + ']'\n        : encodeURIComponent(key)));\n    }\n  }\n\n  return ret.join('&');\n}\n\n/**\n * Set `obj`'s `key` to `val` respecting\n * the weird and wonderful syntax of a qs,\n * where \"foo=bar&foo=baz\" becomes an array.\n *\n * @param {Object} obj\n * @param {String} key\n * @param {String} val\n * @api private\n */\n\nfunction set(obj, key, val) {\n  var v = obj[key];\n  if (hasOwnProperty.call(Object.prototype, key)) return;\n  if (undefined === v) {\n    obj[key] = val;\n  } else if (isArray(v)) {\n    v.push(val);\n  } else {\n    obj[key] = [v, val];\n  }\n}\n\n/**\n * Locate last brace in `str` within the key.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction lastBraceInKey(str) {\n  var len = str.length\n    , brace\n    , c;\n  for (var i = 0; i < len; ++i) {\n    c = str[i];\n    if (']' == c) brace = false;\n    if ('[' == c) brace = true;\n    if ('=' == c && !brace) return i;\n  }\n}\n\n/**\n * Decode `str`.\n *\n * @param {String} str\n * @return {String}\n * @api private\n */\n\nfunction decode(str) {\n  try {\n    return decodeURIComponent(str.replace(/\\+/g, ' '));\n  } catch (err) {\n    return str;\n  }\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/qs/index.js\n ** module id = 16\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/qs/index.js?");

/***/ },
/* 17 */
/*!**************************!*\
  !*** ./~/xtend/index.js ***!
  \**************************/
/***/ function(module, exports, __webpack_require__) {

	eval("var Keys = __webpack_require__(/*! object-keys */ 18)\nvar hasKeys = __webpack_require__(/*! ./has-keys */ 22)\n\nmodule.exports = extend\n\nfunction extend() {\n    var target = {}\n\n    for (var i = 0; i < arguments.length; i++) {\n        var source = arguments[i]\n\n        if (!hasKeys(source)) {\n            continue\n        }\n\n        var keys = Keys(source)\n\n        for (var j = 0; j < keys.length; j++) {\n            var name = keys[j]\n            target[name] = source[name]\n        }\n    }\n\n    return target\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/xtend/index.js\n ** module id = 17\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/xtend/index.js?");

/***/ },
/* 18 */
/*!********************************!*\
  !*** ./~/object-keys/index.js ***!
  \********************************/
/***/ function(module, exports, __webpack_require__) {

	eval("module.exports = Object.keys || __webpack_require__(/*! ./shim */ 19);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/object-keys/index.js\n ** module id = 18\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/object-keys/index.js?");

/***/ },
/* 19 */
/*!*******************************!*\
  !*** ./~/object-keys/shim.js ***!
  \*******************************/
/***/ function(module, exports, __webpack_require__) {

	eval("(function () {\n\t\"use strict\";\n\n\t// modified from https://github.com/kriskowal/es5-shim\n\tvar has = Object.prototype.hasOwnProperty,\n\t\ttoString = Object.prototype.toString,\n\t\tforEach = __webpack_require__(/*! ./foreach */ 20),\n\t\tisArgs = __webpack_require__(/*! ./isArguments */ 21),\n\t\thasDontEnumBug = !({'toString': null}).propertyIsEnumerable('toString'),\n\t\thasProtoEnumBug = (function () {}).propertyIsEnumerable('prototype'),\n\t\tdontEnums = [\n\t\t\t\"toString\",\n\t\t\t\"toLocaleString\",\n\t\t\t\"valueOf\",\n\t\t\t\"hasOwnProperty\",\n\t\t\t\"isPrototypeOf\",\n\t\t\t\"propertyIsEnumerable\",\n\t\t\t\"constructor\"\n\t\t],\n\t\tkeysShim;\n\n\tkeysShim = function keys(object) {\n\t\tvar isObject = object !== null && typeof object === 'object',\n\t\t\tisFunction = toString.call(object) === '[object Function]',\n\t\t\tisArguments = isArgs(object),\n\t\t\ttheKeys = [];\n\n\t\tif (!isObject && !isFunction && !isArguments) {\n\t\t\tthrow new TypeError(\"Object.keys called on a non-object\");\n\t\t}\n\n\t\tif (isArguments) {\n\t\t\tforEach(object, function (value) {\n\t\t\t\ttheKeys.push(value);\n\t\t\t});\n\t\t} else {\n\t\t\tvar name,\n\t\t\t\tskipProto = hasProtoEnumBug && isFunction;\n\n\t\t\tfor (name in object) {\n\t\t\t\tif (!(skipProto && name === 'prototype') && has.call(object, name)) {\n\t\t\t\t\ttheKeys.push(name);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (hasDontEnumBug) {\n\t\t\tvar ctor = object.constructor,\n\t\t\t\tskipConstructor = ctor && ctor.prototype === object;\n\n\t\t\tforEach(dontEnums, function (dontEnum) {\n\t\t\t\tif (!(skipConstructor && dontEnum === 'constructor') && has.call(object, dontEnum)) {\n\t\t\t\t\ttheKeys.push(dontEnum);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\treturn theKeys;\n\t};\n\n\tmodule.exports = keysShim;\n}());\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/object-keys/shim.js\n ** module id = 19\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/object-keys/shim.js?");

/***/ },
/* 20 */
/*!**********************************!*\
  !*** ./~/object-keys/foreach.js ***!
  \**********************************/
/***/ function(module, exports) {

	eval("var hasOwn = Object.prototype.hasOwnProperty;\nvar toString = Object.prototype.toString;\n\nvar isFunction = function (fn) {\n\tvar isFunc = (typeof fn === 'function' && !(fn instanceof RegExp)) || toString.call(fn) === '[object Function]';\n\tif (!isFunc && typeof window !== 'undefined') {\n\t\tisFunc = fn === window.setTimeout || fn === window.alert || fn === window.confirm || fn === window.prompt;\n\t}\n\treturn isFunc;\n};\n\nmodule.exports = function forEach(obj, fn) {\n\tif (!isFunction(fn)) {\n\t\tthrow new TypeError('iterator must be a function');\n\t}\n\tvar i, k,\n\t\tisString = typeof obj === 'string',\n\t\tl = obj.length,\n\t\tcontext = arguments.length > 2 ? arguments[2] : null;\n\tif (l === +l) {\n\t\tfor (i = 0; i < l; i++) {\n\t\t\tif (context === null) {\n\t\t\t\tfn(isString ? obj.charAt(i) : obj[i], i, obj);\n\t\t\t} else {\n\t\t\t\tfn.call(context, isString ? obj.charAt(i) : obj[i], i, obj);\n\t\t\t}\n\t\t}\n\t} else {\n\t\tfor (k in obj) {\n\t\t\tif (hasOwn.call(obj, k)) {\n\t\t\t\tif (context === null) {\n\t\t\t\t\tfn(obj[k], k, obj);\n\t\t\t\t} else {\n\t\t\t\t\tfn.call(context, obj[k], k, obj);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/object-keys/foreach.js\n ** module id = 20\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/object-keys/foreach.js?");

/***/ },
/* 21 */
/*!**************************************!*\
  !*** ./~/object-keys/isArguments.js ***!
  \**************************************/
/***/ function(module, exports) {

	eval("var toString = Object.prototype.toString;\n\nmodule.exports = function isArguments(value) {\n\tvar str = toString.call(value);\n\tvar isArguments = str === '[object Arguments]';\n\tif (!isArguments) {\n\t\tisArguments = str !== '[object Array]'\n\t\t\t&& value !== null\n\t\t\t&& typeof value === 'object'\n\t\t\t&& typeof value.length === 'number'\n\t\t\t&& value.length >= 0\n\t\t\t&& toString.call(value.callee) === '[object Function]';\n\t}\n\treturn isArguments;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/object-keys/isArguments.js\n ** module id = 21\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/object-keys/isArguments.js?");

/***/ },
/* 22 */
/*!*****************************!*\
  !*** ./~/xtend/has-keys.js ***!
  \*****************************/
/***/ function(module, exports) {

	eval("module.exports = hasKeys\n\nfunction hasKeys(source) {\n    return source !== null &&\n        (typeof source === \"object\" ||\n        typeof source === \"function\")\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/xtend/has-keys.js\n ** module id = 22\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/xtend/has-keys.js?");

/***/ },
/* 23 */
/*!*************************!*\
  !*** ./~/trim/index.js ***!
  \*************************/
/***/ function(module, exports) {

	eval("\nexports = module.exports = trim;\n\nfunction trim(str){\n  return str.replace(/^\\s*|\\s*$/g, '');\n}\n\nexports.left = function(str){\n  return str.replace(/^\\s*/, '');\n};\n\nexports.right = function(str){\n  return str.replace(/\\s*$/, '');\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/trim/index.js\n ** module id = 23\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/trim/index.js?");

/***/ },
/* 24 */
/*!******************************!*\
  !*** ./~/reqwest/reqwest.js ***!
  \******************************/
/***/ function(module, exports, __webpack_require__) {

	eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!\n  * Reqwest! A general purpose XHR connection manager\n  * license MIT (c) Dustin Diaz 2014\n  * https://github.com/ded/reqwest\n  */\n\n!function (name, context, definition) {\n  if (typeof module != 'undefined' && module.exports) module.exports = definition()\n  else if (true) !(__WEBPACK_AMD_DEFINE_FACTORY__ = (definition), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))\n  else context[name] = definition()\n}('reqwest', this, function () {\n\n  var win = window\n    , doc = document\n    , httpsRe = /^http/\n    , protocolRe = /(^\\w+):\\/\\//\n    , twoHundo = /^(20\\d|1223)$/ //http://stackoverflow.com/questions/10046972/msie-returns-status-code-of-1223-for-ajax-request\n    , byTag = 'getElementsByTagName'\n    , readyState = 'readyState'\n    , contentType = 'Content-Type'\n    , requestedWith = 'X-Requested-With'\n    , head = doc[byTag]('head')[0]\n    , uniqid = 0\n    , callbackPrefix = 'reqwest_' + (+new Date())\n    , lastValue // data stored by the most recent JSONP callback\n    , xmlHttpRequest = 'XMLHttpRequest'\n    , xDomainRequest = 'XDomainRequest'\n    , noop = function () {}\n\n    , isArray = typeof Array.isArray == 'function'\n        ? Array.isArray\n        : function (a) {\n            return a instanceof Array\n          }\n\n    , defaultHeaders = {\n          'contentType': 'application/x-www-form-urlencoded'\n        , 'requestedWith': xmlHttpRequest\n        , 'accept': {\n              '*':  'text/javascript, text/html, application/xml, text/xml, */*'\n            , 'xml':  'application/xml, text/xml'\n            , 'html': 'text/html'\n            , 'text': 'text/plain'\n            , 'json': 'application/json, text/javascript'\n            , 'js':   'application/javascript, text/javascript'\n          }\n      }\n\n    , xhr = function(o) {\n        // is it x-domain\n        if (o['crossOrigin'] === true) {\n          var xhr = win[xmlHttpRequest] ? new XMLHttpRequest() : null\n          if (xhr && 'withCredentials' in xhr) {\n            return xhr\n          } else if (win[xDomainRequest]) {\n            return new XDomainRequest()\n          } else {\n            throw new Error('Browser does not support cross-origin requests')\n          }\n        } else if (win[xmlHttpRequest]) {\n          return new XMLHttpRequest()\n        } else {\n          return new ActiveXObject('Microsoft.XMLHTTP')\n        }\n      }\n    , globalSetupOptions = {\n        dataFilter: function (data) {\n          return data\n        }\n      }\n\n  function succeed(r) {\n    var protocol = protocolRe.exec(r.url);\n    protocol = (protocol && protocol[1]) || window.location.protocol;\n    return httpsRe.test(protocol) ? twoHundo.test(r.request.status) : !!r.request.response;\n  }\n\n  function handleReadyState(r, success, error) {\n    return function () {\n      // use _aborted to mitigate against IE err c00c023f\n      // (can't read props on aborted request objects)\n      if (r._aborted) return error(r.request)\n      if (r._timedOut) return error(r.request, 'Request is aborted: timeout')\n      if (r.request && r.request[readyState] == 4) {\n        r.request.onreadystatechange = noop\n        if (succeed(r)) success(r.request)\n        else\n          error(r.request)\n      }\n    }\n  }\n\n  function setHeaders(http, o) {\n    var headers = o['headers'] || {}\n      , h\n\n    headers['Accept'] = headers['Accept']\n      || defaultHeaders['accept'][o['type']]\n      || defaultHeaders['accept']['*']\n\n    var isAFormData = typeof FormData === 'function' && (o['data'] instanceof FormData);\n    // breaks cross-origin requests with legacy browsers\n    if (!o['crossOrigin'] && !headers[requestedWith]) headers[requestedWith] = defaultHeaders['requestedWith']\n    if (!headers[contentType] && !isAFormData) headers[contentType] = o['contentType'] || defaultHeaders['contentType']\n    for (h in headers)\n      headers.hasOwnProperty(h) && 'setRequestHeader' in http && http.setRequestHeader(h, headers[h])\n  }\n\n  function setCredentials(http, o) {\n    if (typeof o['withCredentials'] !== 'undefined' && typeof http.withCredentials !== 'undefined') {\n      http.withCredentials = !!o['withCredentials']\n    }\n  }\n\n  function generalCallback(data) {\n    lastValue = data\n  }\n\n  function urlappend (url, s) {\n    return url + (/\\?/.test(url) ? '&' : '?') + s\n  }\n\n  function handleJsonp(o, fn, err, url) {\n    var reqId = uniqid++\n      , cbkey = o['jsonpCallback'] || 'callback' // the 'callback' key\n      , cbval = o['jsonpCallbackName'] || reqwest.getcallbackPrefix(reqId)\n      , cbreg = new RegExp('((^|\\\\?|&)' + cbkey + ')=([^&]+)')\n      , match = url.match(cbreg)\n      , script = doc.createElement('script')\n      , loaded = 0\n      , isIE10 = navigator.userAgent.indexOf('MSIE 10.0') !== -1\n\n    if (match) {\n      if (match[3] === '?') {\n        url = url.replace(cbreg, '$1=' + cbval) // wildcard callback func name\n      } else {\n        cbval = match[3] // provided callback func name\n      }\n    } else {\n      url = urlappend(url, cbkey + '=' + cbval) // no callback details, add 'em\n    }\n\n    win[cbval] = generalCallback\n\n    script.type = 'text/javascript'\n    script.src = url\n    script.async = true\n    if (typeof script.onreadystatechange !== 'undefined' && !isIE10) {\n      // need this for IE due to out-of-order onreadystatechange(), binding script\n      // execution to an event listener gives us control over when the script\n      // is executed. See http://jaubourg.net/2010/07/loading-script-as-onclick-handler-of.html\n      script.htmlFor = script.id = '_reqwest_' + reqId\n    }\n\n    script.onload = script.onreadystatechange = function () {\n      if ((script[readyState] && script[readyState] !== 'complete' && script[readyState] !== 'loaded') || loaded) {\n        return false\n      }\n      script.onload = script.onreadystatechange = null\n      script.onclick && script.onclick()\n      // Call the user callback with the last value stored and clean up values and scripts.\n      fn(lastValue)\n      lastValue = undefined\n      head.removeChild(script)\n      loaded = 1\n    }\n\n    // Add the script to the DOM head\n    head.appendChild(script)\n\n    // Enable JSONP timeout\n    return {\n      abort: function () {\n        script.onload = script.onreadystatechange = null\n        err({}, 'Request is aborted: timeout', {})\n        lastValue = undefined\n        head.removeChild(script)\n        loaded = 1\n      }\n    }\n  }\n\n  function getRequest(fn, err) {\n    var o = this.o\n      , method = (o['method'] || 'GET').toUpperCase()\n      , url = typeof o === 'string' ? o : o['url']\n      // convert non-string objects to query-string form unless o['processData'] is false\n      , data = (o['processData'] !== false && o['data'] && typeof o['data'] !== 'string')\n        ? reqwest.toQueryString(o['data'])\n        : (o['data'] || null)\n      , http\n      , sendWait = false\n\n    // if we're working on a GET request and we have data then we should append\n    // query string to end of URL and not post data\n    if ((o['type'] == 'jsonp' || method == 'GET') && data) {\n      url = urlappend(url, data)\n      data = null\n    }\n\n    if (o['type'] == 'jsonp') return handleJsonp(o, fn, err, url)\n\n    // get the xhr from the factory if passed\n    // if the factory returns null, fall-back to ours\n    http = (o.xhr && o.xhr(o)) || xhr(o)\n\n    http.open(method, url, o['async'] === false ? false : true)\n    setHeaders(http, o)\n    setCredentials(http, o)\n    if (win[xDomainRequest] && http instanceof win[xDomainRequest]) {\n        http.onload = fn\n        http.onerror = err\n        // NOTE: see\n        // http://social.msdn.microsoft.com/Forums/en-US/iewebdevelopment/thread/30ef3add-767c-4436-b8a9-f1ca19b4812e\n        http.onprogress = function() {}\n        sendWait = true\n    } else {\n      http.onreadystatechange = handleReadyState(this, fn, err)\n    }\n    o['before'] && o['before'](http)\n    if (sendWait) {\n      setTimeout(function () {\n        http.send(data)\n      }, 200)\n    } else {\n      http.send(data)\n    }\n    return http\n  }\n\n  function Reqwest(o, fn) {\n    this.o = o\n    this.fn = fn\n\n    init.apply(this, arguments)\n  }\n\n  function setType(header) {\n    // json, javascript, text/plain, text/html, xml\n    if (header.match('json')) return 'json'\n    if (header.match('javascript')) return 'js'\n    if (header.match('text')) return 'html'\n    if (header.match('xml')) return 'xml'\n  }\n\n  function init(o, fn) {\n\n    this.url = typeof o == 'string' ? o : o['url']\n    this.timeout = null\n\n    // whether request has been fulfilled for purpose\n    // of tracking the Promises\n    this._fulfilled = false\n    // success handlers\n    this._successHandler = function(){}\n    this._fulfillmentHandlers = []\n    // error handlers\n    this._errorHandlers = []\n    // complete (both success and fail) handlers\n    this._completeHandlers = []\n    this._erred = false\n    this._responseArgs = {}\n\n    var self = this\n\n    fn = fn || function () {}\n\n    if (o['timeout']) {\n      this.timeout = setTimeout(function () {\n        timedOut()\n      }, o['timeout'])\n    }\n\n    if (o['success']) {\n      this._successHandler = function () {\n        o['success'].apply(o, arguments)\n      }\n    }\n\n    if (o['error']) {\n      this._errorHandlers.push(function () {\n        o['error'].apply(o, arguments)\n      })\n    }\n\n    if (o['complete']) {\n      this._completeHandlers.push(function () {\n        o['complete'].apply(o, arguments)\n      })\n    }\n\n    function complete (resp) {\n      o['timeout'] && clearTimeout(self.timeout)\n      self.timeout = null\n      while (self._completeHandlers.length > 0) {\n        self._completeHandlers.shift()(resp)\n      }\n    }\n\n    function success (resp) {\n      var type = o['type'] || resp && setType(resp.getResponseHeader('Content-Type')) // resp can be undefined in IE\n      resp = (type !== 'jsonp') ? self.request : resp\n      // use global data filter on response text\n      var filteredResponse = globalSetupOptions.dataFilter(resp.responseText, type)\n        , r = filteredResponse\n      try {\n        resp.responseText = r\n      } catch (e) {\n        // can't assign this in IE<=8, just ignore\n      }\n      if (r) {\n        switch (type) {\n        case 'json':\n          try {\n            resp = win.JSON ? win.JSON.parse(r) : eval('(' + r + ')')\n          } catch (err) {\n            return error(resp, 'Could not parse JSON in response', err)\n          }\n          break\n        case 'js':\n          resp = eval(r)\n          break\n        case 'html':\n          resp = r\n          break\n        case 'xml':\n          resp = resp.responseXML\n              && resp.responseXML.parseError // IE trololo\n              && resp.responseXML.parseError.errorCode\n              && resp.responseXML.parseError.reason\n            ? null\n            : resp.responseXML\n          break\n        }\n      }\n\n      self._responseArgs.resp = resp\n      self._fulfilled = true\n      fn(resp)\n      self._successHandler(resp)\n      while (self._fulfillmentHandlers.length > 0) {\n        resp = self._fulfillmentHandlers.shift()(resp)\n      }\n\n      complete(resp)\n    }\n\n    function timedOut() {\n      self._timedOut = true\n      self.request.abort()      \n    }\n\n    function error(resp, msg, t) {\n      resp = self.request\n      self._responseArgs.resp = resp\n      self._responseArgs.msg = msg\n      self._responseArgs.t = t\n      self._erred = true\n      while (self._errorHandlers.length > 0) {\n        self._errorHandlers.shift()(resp, msg, t)\n      }\n      complete(resp)\n    }\n\n    this.request = getRequest.call(this, success, error)\n  }\n\n  Reqwest.prototype = {\n    abort: function () {\n      this._aborted = true\n      this.request.abort()\n    }\n\n  , retry: function () {\n      init.call(this, this.o, this.fn)\n    }\n\n    /**\n     * Small deviation from the Promises A CommonJs specification\n     * http://wiki.commonjs.org/wiki/Promises/A\n     */\n\n    /**\n     * `then` will execute upon successful requests\n     */\n  , then: function (success, fail) {\n      success = success || function () {}\n      fail = fail || function () {}\n      if (this._fulfilled) {\n        this._responseArgs.resp = success(this._responseArgs.resp)\n      } else if (this._erred) {\n        fail(this._responseArgs.resp, this._responseArgs.msg, this._responseArgs.t)\n      } else {\n        this._fulfillmentHandlers.push(success)\n        this._errorHandlers.push(fail)\n      }\n      return this\n    }\n\n    /**\n     * `always` will execute whether the request succeeds or fails\n     */\n  , always: function (fn) {\n      if (this._fulfilled || this._erred) {\n        fn(this._responseArgs.resp)\n      } else {\n        this._completeHandlers.push(fn)\n      }\n      return this\n    }\n\n    /**\n     * `fail` will execute when the request fails\n     */\n  , fail: function (fn) {\n      if (this._erred) {\n        fn(this._responseArgs.resp, this._responseArgs.msg, this._responseArgs.t)\n      } else {\n        this._errorHandlers.push(fn)\n      }\n      return this\n    }\n  , 'catch': function (fn) {\n      return this.fail(fn)\n    }\n  }\n\n  function reqwest(o, fn) {\n    return new Reqwest(o, fn)\n  }\n\n  // normalize newline variants according to spec -> CRLF\n  function normalize(s) {\n    return s ? s.replace(/\\r?\\n/g, '\\r\\n') : ''\n  }\n\n  function serial(el, cb) {\n    var n = el.name\n      , t = el.tagName.toLowerCase()\n      , optCb = function (o) {\n          // IE gives value=\"\" even where there is no value attribute\n          // 'specified' ref: http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-862529273\n          if (o && !o['disabled'])\n            cb(n, normalize(o['attributes']['value'] && o['attributes']['value']['specified'] ? o['value'] : o['text']))\n        }\n      , ch, ra, val, i\n\n    // don't serialize elements that are disabled or without a name\n    if (el.disabled || !n) return\n\n    switch (t) {\n    case 'input':\n      if (!/reset|button|image|file/i.test(el.type)) {\n        ch = /checkbox/i.test(el.type)\n        ra = /radio/i.test(el.type)\n        val = el.value\n        // WebKit gives us \"\" instead of \"on\" if a checkbox has no value, so correct it here\n        ;(!(ch || ra) || el.checked) && cb(n, normalize(ch && val === '' ? 'on' : val))\n      }\n      break\n    case 'textarea':\n      cb(n, normalize(el.value))\n      break\n    case 'select':\n      if (el.type.toLowerCase() === 'select-one') {\n        optCb(el.selectedIndex >= 0 ? el.options[el.selectedIndex] : null)\n      } else {\n        for (i = 0; el.length && i < el.length; i++) {\n          el.options[i].selected && optCb(el.options[i])\n        }\n      }\n      break\n    }\n  }\n\n  // collect up all form elements found from the passed argument elements all\n  // the way down to child elements; pass a '<form>' or form fields.\n  // called with 'this'=callback to use for serial() on each element\n  function eachFormElement() {\n    var cb = this\n      , e, i\n      , serializeSubtags = function (e, tags) {\n          var i, j, fa\n          for (i = 0; i < tags.length; i++) {\n            fa = e[byTag](tags[i])\n            for (j = 0; j < fa.length; j++) serial(fa[j], cb)\n          }\n        }\n\n    for (i = 0; i < arguments.length; i++) {\n      e = arguments[i]\n      if (/input|select|textarea/i.test(e.tagName)) serial(e, cb)\n      serializeSubtags(e, [ 'input', 'select', 'textarea' ])\n    }\n  }\n\n  // standard query string style serialization\n  function serializeQueryString() {\n    return reqwest.toQueryString(reqwest.serializeArray.apply(null, arguments))\n  }\n\n  // { 'name': 'value', ... } style serialization\n  function serializeHash() {\n    var hash = {}\n    eachFormElement.apply(function (name, value) {\n      if (name in hash) {\n        hash[name] && !isArray(hash[name]) && (hash[name] = [hash[name]])\n        hash[name].push(value)\n      } else hash[name] = value\n    }, arguments)\n    return hash\n  }\n\n  // [ { name: 'name', value: 'value' }, ... ] style serialization\n  reqwest.serializeArray = function () {\n    var arr = []\n    eachFormElement.apply(function (name, value) {\n      arr.push({name: name, value: value})\n    }, arguments)\n    return arr\n  }\n\n  reqwest.serialize = function () {\n    if (arguments.length === 0) return ''\n    var opt, fn\n      , args = Array.prototype.slice.call(arguments, 0)\n\n    opt = args.pop()\n    opt && opt.nodeType && args.push(opt) && (opt = null)\n    opt && (opt = opt.type)\n\n    if (opt == 'map') fn = serializeHash\n    else if (opt == 'array') fn = reqwest.serializeArray\n    else fn = serializeQueryString\n\n    return fn.apply(null, args)\n  }\n\n  reqwest.toQueryString = function (o, trad) {\n    var prefix, i\n      , traditional = trad || false\n      , s = []\n      , enc = encodeURIComponent\n      , add = function (key, value) {\n          // If value is a function, invoke it and return its value\n          value = ('function' === typeof value) ? value() : (value == null ? '' : value)\n          s[s.length] = enc(key) + '=' + enc(value)\n        }\n    // If an array was passed in, assume that it is an array of form elements.\n    if (isArray(o)) {\n      for (i = 0; o && i < o.length; i++) add(o[i]['name'], o[i]['value'])\n    } else {\n      // If traditional, encode the \"old\" way (the way 1.3.2 or older\n      // did it), otherwise encode params recursively.\n      for (prefix in o) {\n        if (o.hasOwnProperty(prefix)) buildParams(prefix, o[prefix], traditional, add)\n      }\n    }\n\n    // spaces should be + according to spec\n    return s.join('&').replace(/%20/g, '+')\n  }\n\n  function buildParams(prefix, obj, traditional, add) {\n    var name, i, v\n      , rbracket = /\\[\\]$/\n\n    if (isArray(obj)) {\n      // Serialize array item.\n      for (i = 0; obj && i < obj.length; i++) {\n        v = obj[i]\n        if (traditional || rbracket.test(prefix)) {\n          // Treat each array item as a scalar.\n          add(prefix, v)\n        } else {\n          buildParams(prefix + '[' + (typeof v === 'object' ? i : '') + ']', v, traditional, add)\n        }\n      }\n    } else if (obj && obj.toString() === '[object Object]') {\n      // Serialize object item.\n      for (name in obj) {\n        buildParams(prefix + '[' + name + ']', obj[name], traditional, add)\n      }\n\n    } else {\n      // Serialize scalar item.\n      add(prefix, obj)\n    }\n  }\n\n  reqwest.getcallbackPrefix = function () {\n    return callbackPrefix\n  }\n\n  // jQuery and Zepto compatibility, differences can be remapped here so you can call\n  // .ajax.compat(options, callback)\n  reqwest.compat = function (o, fn) {\n    if (o) {\n      o['type'] && (o['method'] = o['type']) && delete o['type']\n      o['dataType'] && (o['type'] = o['dataType'])\n      o['jsonpCallback'] && (o['jsonpCallbackName'] = o['jsonpCallback']) && delete o['jsonpCallback']\n      o['jsonp'] && (o['jsonpCallback'] = o['jsonp'])\n    }\n    return new Reqwest(o, fn)\n  }\n\n  reqwest.ajaxSetup = function (options) {\n    options = options || {}\n    for (var k in options) {\n      globalSetupOptions[k] = options[k]\n    }\n  }\n\n  return reqwest\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/reqwest/reqwest.js\n ** module id = 24\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/reqwest/reqwest.js?");

/***/ },
/* 25 */
/*!******************************!*\
  !*** ./~/winchan/winchan.js ***!
  \******************************/
/***/ function(module, exports) {

	eval("var WinChan = (function() {\n  var RELAY_FRAME_NAME = \"__winchan_relay_frame\";\n  var CLOSE_CMD = \"die\";\n\n  // a portable addListener implementation\n  function addListener(w, event, cb) {\n    if(w.attachEvent) w.attachEvent('on' + event, cb);\n    else if (w.addEventListener) w.addEventListener(event, cb, false);\n  }\n\n  // a portable removeListener implementation\n  function removeListener(w, event, cb) {\n    if(w.detachEvent) w.detachEvent('on' + event, cb);\n    else if (w.removeEventListener) w.removeEventListener(event, cb, false);\n  }\n\n\n  // checking for IE8 or above\n  function isInternetExplorer() {\n    var rv = -1; // Return value assumes failure.\n    var ua = navigator.userAgent;\n    if (navigator.appName === 'Microsoft Internet Explorer') {\n      var re = new RegExp(\"MSIE ([0-9]{1,}[\\.0-9]{0,})\");\n      if (re.exec(ua) != null)\n        rv = parseFloat(RegExp.$1);\n    }\n    // IE > 11\n    else if (ua.indexOf(\"Trident\") > -1) {\n      var re = new RegExp(\"rv:([0-9]{2,2}[\\.0-9]{0,})\");\n      if (re.exec(ua) !== null) {\n        rv = parseFloat(RegExp.$1);\n      }\n    }\n\n    return rv >= 8;\n  }\n\n  // checking Mobile Firefox (Fennec)\n  function isFennec() {\n    try {\n      // We must check for both XUL and Java versions of Fennec.  Both have\n      // distinct UA strings.\n      var userAgent = navigator.userAgent;\n      return (userAgent.indexOf('Fennec/') != -1) ||  // XUL\n             (userAgent.indexOf('Firefox/') != -1 && userAgent.indexOf('Android') != -1);   // Java\n    } catch(e) {}\n    return false;\n  }\n\n  // feature checking to see if this platform is supported at all\n  function isSupported() {\n    return (window.JSON && window.JSON.stringify &&\n            window.JSON.parse && window.postMessage);\n  }\n\n  // given a URL, extract the origin. Taken from: https://github.com/firebase/firebase-simple-login/blob/d2cb95b9f812d8488bdbfba51c3a7c153ba1a074/js/src/simple-login/transports/WinChan.js#L25-L30\n  function extractOrigin(url) {\n    if (!/^https?:\\/\\//.test(url)) url = window.location.href;\n    var m = /^(https?:\\/\\/[\\-_a-zA-Z\\.0-9:]+)/.exec(url);\n    if (m) return m[1];\n    return url;\n  }\n\n  // find the relay iframe in the opener\n  function findRelay() {\n    var loc = window.location;\n    var frames = window.opener.frames;\n    for (var i = frames.length - 1; i >= 0; i--) {\n      try {\n        if (frames[i].location.protocol === window.location.protocol &&\n            frames[i].location.host === window.location.host &&\n            frames[i].name === RELAY_FRAME_NAME)\n        {\n          return frames[i];\n        }\n      } catch(e) { }\n    }\n    return;\n  }\n\n  var isIE = isInternetExplorer();\n\n  if (isSupported()) {\n    /*  General flow:\n     *                  0. user clicks\n     *  (IE SPECIFIC)   1. caller adds relay iframe (served from trusted domain) to DOM\n     *                  2. caller opens window (with content from trusted domain)\n     *                  3. window on opening adds a listener to 'message'\n     *  (IE SPECIFIC)   4. window on opening finds iframe\n     *                  5. window checks if iframe is \"loaded\" - has a 'doPost' function yet\n     *  (IE SPECIFIC5)  5a. if iframe.doPost exists, window uses it to send ready event to caller\n     *  (IE SPECIFIC5)  5b. if iframe.doPost doesn't exist, window waits for frame ready\n     *  (IE SPECIFIC5)  5bi. once ready, window calls iframe.doPost to send ready event\n     *                  6. caller upon reciept of 'ready', sends args\n     */\n    return {\n      open: function(opts, cb) {\n        if (!cb) throw \"missing required callback argument\";\n\n        // test required options\n        var err;\n        if (!opts.url) err = \"missing required 'url' parameter\";\n        if (!opts.relay_url) err = \"missing required 'relay_url' parameter\";\n        if (err) setTimeout(function() { cb(err); }, 0);\n\n        // supply default options\n        if (!opts.window_name) opts.window_name = null;\n        if (!opts.window_features || isFennec()) opts.window_features = undefined;\n\n        // opts.params may be undefined\n\n        var iframe;\n\n        // sanity check, are url and relay_url the same origin?\n        var origin = extractOrigin(opts.url);\n        if (origin !== extractOrigin(opts.relay_url)) {\n          return setTimeout(function() {\n            cb('invalid arguments: origin of url and relay_url must match');\n          }, 0);\n        }\n\n        var messageTarget;\n\n        if (isIE) {\n          // first we need to add a \"relay\" iframe to the document that's served\n          // from the target domain.  We can postmessage into a iframe, but not a\n          // window\n          iframe = document.createElement(\"iframe\");\n          // iframe.setAttribute('name', framename);\n          iframe.setAttribute('src', opts.relay_url);\n          iframe.style.display = \"none\";\n          iframe.setAttribute('name', RELAY_FRAME_NAME);\n          document.body.appendChild(iframe);\n          messageTarget = iframe.contentWindow;\n        }\n\n        var w = opts.popup || window.open(opts.url, opts.window_name, opts.window_features);\n        if (opts.popup) {\n          w.location.href = opts.url;\n        }\n\n        if (!messageTarget) messageTarget = w;\n\n        // lets listen in case the window blows up before telling us\n        var closeInterval = setInterval(function() {\n          if (w && w.closed) {\n            cleanup();\n            if (cb) {\n              cb('User closed the popup window');\n              cb = null;\n            }\n          }\n        }, 500);\n\n        var req = JSON.stringify({a: 'request', d: opts.params});\n\n        // cleanup on unload\n        function cleanup() {\n          if (iframe) document.body.removeChild(iframe);\n          iframe = undefined;\n          if (closeInterval) closeInterval = clearInterval(closeInterval);\n          removeListener(window, 'message', onMessage);\n          removeListener(window, 'unload', cleanup);\n          if (w) {\n            try {\n              w.close();\n            } catch (securityViolation) {\n              // This happens in Opera 12 sometimes\n              // see https://github.com/mozilla/browserid/issues/1844\n              messageTarget.postMessage(CLOSE_CMD, origin);\n            }\n          }\n          w = messageTarget = undefined;\n        }\n\n        addListener(window, 'unload', cleanup);\n\n        function onMessage(e) {\n          if (e.origin !== origin) { return; }\n          try {\n            var d = JSON.parse(e.data);\n            if (d.a === 'ready') messageTarget.postMessage(req, origin);\n            else if (d.a === 'error') {\n              cleanup();\n              if (cb) {\n                cb(d.d);\n                cb = null;\n              }\n            } else if (d.a === 'response') {\n              cleanup();\n              if (cb) {\n                cb(null, d.d);\n                cb = null;\n              }\n            }\n          } catch(err) { }\n        }\n\n        addListener(window, 'message', onMessage);\n\n        return {\n          close: cleanup,\n          focus: function() {\n            if (w) {\n              try {\n                w.focus();\n              } catch (e) {\n                // IE7 blows up here, do nothing\n              }\n            }\n          }\n        };\n      },\n      onOpen: function(cb) {\n        var o = \"*\";\n        var msgTarget = isIE ? findRelay() : window.opener;\n        if (!msgTarget) throw \"can't find relay frame\";\n        function doPost(msg) {\n          msg = JSON.stringify(msg);\n          if (isIE) msgTarget.doPost(msg, o);\n          else msgTarget.postMessage(msg, o);\n        }\n\n        function onMessage(e) {\n          // only one message gets through, but let's make sure it's actually\n          // the message we're looking for (other code may be using\n          // postmessage) - we do this by ensuring the payload can\n          // be parsed, and it's got an 'a' (action) value of 'request'.\n          var d;\n          try {\n            d = JSON.parse(e.data);\n          } catch(err) { }\n          if (!d || d.a !== 'request') return;\n          removeListener(window, 'message', onMessage);\n          o = e.origin;\n          if (cb) {\n            // this setTimeout is critically important for IE8 -\n            // in ie8 sometimes addListener for 'message' can synchronously\n            // cause your callback to be invoked.  awesome.\n            setTimeout(function() {\n              cb(o, d.d, function(r) {\n                cb = undefined;\n                doPost({a: 'response', d: r});\n              });\n            }, 0);\n          }\n        }\n\n        function onDie(e) {\n          if (e.data === CLOSE_CMD) {\n            try { window.close(); } catch (o_O) {}\n          }\n        }\n        addListener(isIE ? msgTarget : window, 'message', onMessage);\n        addListener(isIE ? msgTarget : window, 'message', onDie);\n\n        // we cannot post to our parent that we're ready before the iframe\n        // is loaded. (IE specific possible failure)\n        try {\n          doPost({a: \"ready\"});\n        } catch(e) {\n          // this code should never be exectued outside IE\n          addListener(msgTarget, 'load', function(e) {\n            doPost({a: \"ready\"});\n          });\n        }\n\n        // if window is unloaded and the client hasn't called cb, it's an error\n        var onUnload = function() {\n          try {\n            // IE8 doesn't like this...\n            removeListener(isIE ? msgTarget : window, 'message', onDie);\n          } catch (ohWell) { }\n          if (cb) doPost({ a: 'error', d: 'client closed window' });\n          cb = undefined;\n          // explicitly close the window, in case the client is trying to reload or nav\n          try { window.close(); } catch (e) { }\n        };\n        addListener(window, 'unload', onUnload);\n        return {\n          detach: function() {\n            removeListener(window, 'unload', onUnload);\n          }\n        };\n      }\n    };\n  } else {\n    return {\n      open: function(url, winopts, arg, cb) {\n        setTimeout(function() { cb(\"unsupported browser\"); }, 0);\n      },\n      onOpen: function(cb) {\n        setTimeout(function() { cb(\"unsupported browser\"); }, 0);\n      }\n    };\n  }\n})();\n\nif (typeof module !== 'undefined' && module.exports) {\n  module.exports = WinChan;\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/winchan/winchan.js\n ** module id = 25\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/winchan/winchan.js?");

/***/ },
/* 26 */
/*!**************************!*\
  !*** ./~/jsonp/index.js ***!
  \**************************/
/***/ function(module, exports, __webpack_require__) {

	eval("/**\n * Module dependencies\n */\n\nvar debug = __webpack_require__(/*! debug */ 27)('jsonp');\n\n/**\n * Module exports.\n */\n\nmodule.exports = jsonp;\n\n/**\n * Callback index.\n */\n\nvar count = 0;\n\n/**\n * Noop function.\n */\n\nfunction noop(){}\n\n/**\n * JSONP handler\n *\n * Options:\n *  - param {String} qs parameter (`callback`)\n *  - timeout {Number} how long after a timeout error is emitted (`60000`)\n *\n * @param {String} url\n * @param {Object|Function} optional options / callback\n * @param {Function} optional callback\n */\n\nfunction jsonp(url, opts, fn){\n  if ('function' == typeof opts) {\n    fn = opts;\n    opts = {};\n  }\n  if (!opts) opts = {};\n\n  var prefix = opts.prefix || '__jp';\n  var param = opts.param || 'callback';\n  var timeout = null != opts.timeout ? opts.timeout : 60000;\n  var enc = encodeURIComponent;\n  var target = document.getElementsByTagName('script')[0] || document.head;\n  var script;\n  var timer;\n\n  // generate a unique id for this request\n  var id = prefix + (count++);\n\n  if (timeout) {\n    timer = setTimeout(function(){\n      cleanup();\n      if (fn) fn(new Error('Timeout'));\n    }, timeout);\n  }\n\n  function cleanup(){\n    script.parentNode.removeChild(script);\n    window[id] = noop;\n  }\n\n  window[id] = function(data){\n    debug('jsonp got', data);\n    if (timer) clearTimeout(timer);\n    cleanup();\n    if (fn) fn(null, data);\n  };\n\n  // add qs component\n  url += (~url.indexOf('?') ? '&' : '?') + param + '=' + enc(id);\n  url = url.replace('?&', '?');\n\n  debug('jsonp req \"%s\"', url);\n\n  // create script\n  script = document.createElement('script');\n  script.src = url;\n  target.parentNode.insertBefore(script, target);\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/jsonp/index.js\n ** module id = 26\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/jsonp/index.js?");

/***/ },
/* 27 */
/*!****************************!*\
  !*** ./~/debug/browser.js ***!
  \****************************/
/***/ function(module, exports, __webpack_require__) {

	eval("\n/**\n * This is the web browser implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = __webpack_require__(/*! ./debug */ 28);\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = 'undefined' != typeof chrome\n               && 'undefined' != typeof chrome.storage\n                  ? chrome.storage.local\n                  : localstorage();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n  'lightseagreen',\n  'forestgreen',\n  'goldenrod',\n  'dodgerblue',\n  'darkorchid',\n  'crimson'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\nfunction useColors() {\n  // is webkit? http://stackoverflow.com/a/16459606/376773\n  return ('WebkitAppearance' in document.documentElement.style) ||\n    // is firebug? http://stackoverflow.com/a/398120/376773\n    (window.console && (console.firebug || (console.exception && console.table))) ||\n    // is firefox >= v31?\n    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n    (navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31);\n}\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nexports.formatters.j = function(v) {\n  return JSON.stringify(v);\n};\n\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs() {\n  var args = arguments;\n  var useColors = this.useColors;\n\n  args[0] = (useColors ? '%c' : '')\n    + this.namespace\n    + (useColors ? ' %c' : ' ')\n    + args[0]\n    + (useColors ? '%c ' : ' ')\n    + '+' + exports.humanize(this.diff);\n\n  if (!useColors) return args;\n\n  var c = 'color: ' + this.color;\n  args = [args[0], c, 'color: inherit'].concat(Array.prototype.slice.call(args, 1));\n\n  // the final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-z%]/g, function(match) {\n    if ('%%' === match) return;\n    index++;\n    if ('%c' === match) {\n      // we only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n\n  args.splice(lastC, 0, c);\n  return args;\n}\n\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\nfunction log() {\n  // this hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return 'object' === typeof console\n    && console.log\n    && Function.prototype.apply.call(console.log, console, arguments);\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  try {\n    if (null == namespaces) {\n      exports.storage.removeItem('debug');\n    } else {\n      exports.storage.debug = namespaces;\n    }\n  } catch(e) {}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  var r;\n  try {\n    r = exports.storage.debug;\n  } catch(e) {}\n  return r;\n}\n\n/**\n * Enable namespaces listed in `localStorage.debug` initially.\n */\n\nexports.enable(load());\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage(){\n  try {\n    return window.localStorage;\n  } catch (e) {}\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/debug/browser.js\n ** module id = 27\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/debug/browser.js?");

/***/ },
/* 28 */
/*!**************************!*\
  !*** ./~/debug/debug.js ***!
  \**************************/
/***/ function(module, exports, __webpack_require__) {

	eval("\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = debug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = __webpack_require__(/*! ms */ 29);\n\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lowercased letter, i.e. \"n\".\n */\n\nexports.formatters = {};\n\n/**\n * Previously assigned color.\n */\n\nvar prevColor = 0;\n\n/**\n * Previous log timestamp.\n */\n\nvar prevTime;\n\n/**\n * Select a color.\n *\n * @return {Number}\n * @api private\n */\n\nfunction selectColor() {\n  return exports.colors[prevColor++ % exports.colors.length];\n}\n\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\nfunction debug(namespace) {\n\n  // define the `disabled` version\n  function disabled() {\n  }\n  disabled.enabled = false;\n\n  // define the `enabled` version\n  function enabled() {\n\n    var self = enabled;\n\n    // set `diff` timestamp\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr;\n\n    // add the `color` if not set\n    if (null == self.useColors) self.useColors = exports.useColors();\n    if (null == self.color && self.useColors) self.color = selectColor();\n\n    var args = Array.prototype.slice.call(arguments);\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %o\n      args = ['%o'].concat(args);\n    }\n\n    // apply any `formatters` transformations\n    var index = 0;\n    args[0] = args[0].replace(/%([a-z%])/g, function(match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val);\n\n        // now we need to remove `args[index]` since it's inlined in the `format`\n        args.splice(index, 1);\n        index--;\n      }\n      return match;\n    });\n\n    if ('function' === typeof exports.formatArgs) {\n      args = exports.formatArgs.apply(self, args);\n    }\n    var logFn = enabled.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n  enabled.enabled = true;\n\n  var fn = exports.enabled(namespace) ? enabled : disabled;\n\n  fn.namespace = namespace;\n\n  return fn;\n}\n\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n\n  var split = (namespaces || '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (var i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n    namespaces = split[i].replace(/\\*/g, '.*?');\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n}\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\nfunction disable() {\n  exports.enable('');\n}\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\nfunction enabled(name) {\n  var i, len;\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/debug/debug.js\n ** module id = 28\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/debug/debug.js?");

/***/ },
/* 29 */
/*!***********************!*\
  !*** ./~/ms/index.js ***!
  \***********************/
/***/ function(module, exports) {

	eval("/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} options\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options){\n  options = options || {};\n  if ('string' == typeof val) return parse(val);\n  return options.long\n    ? long(val)\n    : short(val);\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = '' + str;\n  if (str.length > 10000) return;\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(str);\n  if (!match) return;\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction short(ms) {\n  if (ms >= d) return Math.round(ms / d) + 'd';\n  if (ms >= h) return Math.round(ms / h) + 'h';\n  if (ms >= m) return Math.round(ms / m) + 'm';\n  if (ms >= s) return Math.round(ms / s) + 's';\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction long(ms) {\n  return plural(ms, d, 'day')\n    || plural(ms, h, 'hour')\n    || plural(ms, m, 'minute')\n    || plural(ms, s, 'second')\n    || ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, n, name) {\n  if (ms < n) return;\n  if (ms < n * 1.5) return Math.floor(ms / n) + ' ' + name;\n  return Math.ceil(ms / n) + ' ' + name + 's';\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/ms/index.js\n ** module id = 29\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/ms/index.js?");

/***/ },
/* 30 */
/*!***************************************!*\
  !*** ./~/auth0-js/lib/same-origin.js ***!
  \***************************************/
/***/ function(module, exports) {

	eval("/**\n * Check for same origin policy\n */\n\nvar protocol = window.location.protocol;\nvar domain = window.location.hostname;\nvar port = window.location.port;\n\nmodule.exports = same_origin;\n\nfunction same_origin (tprotocol, tdomain, tport) {\n  tport = tport || '';\n  return protocol === tprotocol && domain === tdomain && port === tport;\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/auth0-js/lib/same-origin.js\n ** module id = 30\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/auth0-js/lib/same-origin.js?");

/***/ },
/* 31 */
/*!**************************************!*\
  !*** ./~/auth0-js/lib/json-parse.js ***!
  \**************************************/
/***/ function(module, exports, __webpack_require__) {

	eval("/**\n * Expose `JSON.parse` method or fallback if not\n * exists on `window`\n */\n\nmodule.exports = 'undefined' === typeof window.JSON\n  ? __webpack_require__(/*! json-fallback */ 32).parse\n  : window.JSON.parse;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/auth0-js/lib/json-parse.js\n ** module id = 31\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/auth0-js/lib/json-parse.js?");

/***/ },
/* 32 */
/*!**********************************!*\
  !*** ./~/json-fallback/index.js ***!
  \**********************************/
/***/ function(module, exports) {

	eval("/*\n    json2.js\n    2011-10-19\n\n    Public Domain.\n\n    NO WARRANTY EXPRESSED OR IMPLIED. USE AT YOUR OWN RISK.\n\n    See http://www.JSON.org/js.html\n\n\n    This code should be minified before deployment.\n    See http://javascript.crockford.com/jsmin.html\n\n    USE YOUR OWN COPY. IT IS EXTREMELY UNWISE TO LOAD CODE FROM SERVERS YOU DO\n    NOT CONTROL.\n\n\n    This file creates a global JSON object containing two methods: stringify\n    and parse.\n\n        JSON.stringify(value, replacer, space)\n            value       any JavaScript value, usually an object or array.\n\n            replacer    an optional parameter that determines how object\n                        values are stringified for objects. It can be a\n                        function or an array of strings.\n\n            space       an optional parameter that specifies the indentation\n                        of nested structures. If it is omitted, the text will\n                        be packed without extra whitespace. If it is a number,\n                        it will specify the number of spaces to indent at each\n                        level. If it is a string (such as '\\t' or '&nbsp;'),\n                        it contains the characters used to indent at each level.\n\n            This method produces a JSON text from a JavaScript value.\n\n            When an object value is found, if the object contains a toJSON\n            method, its toJSON method will be called and the result will be\n            stringified. A toJSON method does not serialize: it returns the\n            value represented by the name/value pair that should be serialized,\n            or undefined if nothing should be serialized. The toJSON method\n            will be passed the key associated with the value, and this will be\n            bound to the value\n\n            For example, this would serialize Dates as ISO strings.\n\n                Date.prototype.toJSON = function (key) {\n                    function f(n) {\n                        // Format integers to have at least two digits.\n                        return n < 10 ? '0' + n : n;\n                    }\n\n                    return this.getUTCFullYear()   + '-' +\n                         f(this.getUTCMonth() + 1) + '-' +\n                         f(this.getUTCDate())      + 'T' +\n                         f(this.getUTCHours())     + ':' +\n                         f(this.getUTCMinutes())   + ':' +\n                         f(this.getUTCSeconds())   + 'Z';\n                };\n\n            You can provide an optional replacer method. It will be passed the\n            key and value of each member, with this bound to the containing\n            object. The value that is returned from your method will be\n            serialized. If your method returns undefined, then the member will\n            be excluded from the serialization.\n\n            If the replacer parameter is an array of strings, then it will be\n            used to select the members to be serialized. It filters the results\n            such that only members with keys listed in the replacer array are\n            stringified.\n\n            Values that do not have JSON representations, such as undefined or\n            functions, will not be serialized. Such values in objects will be\n            dropped; in arrays they will be replaced with null. You can use\n            a replacer function to replace those with JSON values.\n            JSON.stringify(undefined) returns undefined.\n\n            The optional space parameter produces a stringification of the\n            value that is filled with line breaks and indentation to make it\n            easier to read.\n\n            If the space parameter is a non-empty string, then that string will\n            be used for indentation. If the space parameter is a number, then\n            the indentation will be that many spaces.\n\n            Example:\n\n            text = JSON.stringify(['e', {pluribus: 'unum'}]);\n            // text is '[\"e\",{\"pluribus\":\"unum\"}]'\n\n\n            text = JSON.stringify(['e', {pluribus: 'unum'}], null, '\\t');\n            // text is '[\\n\\t\"e\",\\n\\t{\\n\\t\\t\"pluribus\": \"unum\"\\n\\t}\\n]'\n\n            text = JSON.stringify([new Date()], function (key, value) {\n                return this[key] instanceof Date ?\n                    'Date(' + this[key] + ')' : value;\n            });\n            // text is '[\"Date(---current time---)\"]'\n\n\n        JSON.parse(text, reviver)\n            This method parses a JSON text to produce an object or array.\n            It can throw a SyntaxError exception.\n\n            The optional reviver parameter is a function that can filter and\n            transform the results. It receives each of the keys and values,\n            and its return value is used instead of the original value.\n            If it returns what it received, then the structure is not modified.\n            If it returns undefined then the member is deleted.\n\n            Example:\n\n            // Parse the text. Values that look like ISO date strings will\n            // be converted to Date objects.\n\n            myData = JSON.parse(text, function (key, value) {\n                var a;\n                if (typeof value === 'string') {\n                    a =\n/^(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2}(?:\\.\\d*)?)Z$/.exec(value);\n                    if (a) {\n                        return new Date(Date.UTC(+a[1], +a[2] - 1, +a[3], +a[4],\n                            +a[5], +a[6]));\n                    }\n                }\n                return value;\n            });\n\n            myData = JSON.parse('[\"Date(09/09/2001)\"]', function (key, value) {\n                var d;\n                if (typeof value === 'string' &&\n                        value.slice(0, 5) === 'Date(' &&\n                        value.slice(-1) === ')') {\n                    d = new Date(value.slice(5, -1));\n                    if (d) {\n                        return d;\n                    }\n                }\n                return value;\n            });\n\n\n    This is a reference implementation. You are free to copy, modify, or\n    redistribute.\n*/\n\n/*jslint evil: true, regexp: true */\n\n/*members \"\", \"\\b\", \"\\t\", \"\\n\", \"\\f\", \"\\r\", \"\\\"\", JSON, \"\\\\\", apply,\n    call, charCodeAt, getUTCDate, getUTCFullYear, getUTCHours,\n    getUTCMinutes, getUTCMonth, getUTCSeconds, hasOwnProperty, join,\n    lastIndex, length, parse, prototype, push, replace, slice, stringify,\n    test, toJSON, toString, valueOf\n*/\n\n\n// Create a JSON object only if one does not already exist. We create the\n// methods in a closure to avoid creating global variables.\n\nvar JSON = {};\n\n(function () {\n    'use strict';\n\n    function f(n) {\n        // Format integers to have at least two digits.\n        return n < 10 ? '0' + n : n;\n    }\n\n    if (typeof Date.prototype.toJSON !== 'function') {\n\n        Date.prototype.toJSON = function (key) {\n\n            return isFinite(this.valueOf())\n                ? this.getUTCFullYear()     + '-' +\n                    f(this.getUTCMonth() + 1) + '-' +\n                    f(this.getUTCDate())      + 'T' +\n                    f(this.getUTCHours())     + ':' +\n                    f(this.getUTCMinutes())   + ':' +\n                    f(this.getUTCSeconds())   + 'Z'\n                : null;\n        };\n\n        String.prototype.toJSON      =\n            Number.prototype.toJSON  =\n            Boolean.prototype.toJSON = function (key) {\n                return this.valueOf();\n            };\n    }\n\n    var cx = /[\\u0000\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g,\n        escapable = /[\\\\\\\"\\x00-\\x1f\\x7f-\\x9f\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g,\n        gap,\n        indent,\n        meta = {    // table of character substitutions\n            '\\b': '\\\\b',\n            '\\t': '\\\\t',\n            '\\n': '\\\\n',\n            '\\f': '\\\\f',\n            '\\r': '\\\\r',\n            '\"' : '\\\\\"',\n            '\\\\': '\\\\\\\\'\n        },\n        rep;\n\n\n    function quote(string) {\n\n// If the string contains no control characters, no quote characters, and no\n// backslash characters, then we can safely slap some quotes around it.\n// Otherwise we must also replace the offending characters with safe escape\n// sequences.\n\n        escapable.lastIndex = 0;\n        return escapable.test(string) ? '\"' + string.replace(escapable, function (a) {\n            var c = meta[a];\n            return typeof c === 'string'\n                ? c\n                : '\\\\u' + ('0000' + a.charCodeAt(0).toString(16)).slice(-4);\n        }) + '\"' : '\"' + string + '\"';\n    }\n\n\n    function str(key, holder) {\n\n// Produce a string from holder[key].\n\n        var i,          // The loop counter.\n            k,          // The member key.\n            v,          // The member value.\n            length,\n            mind = gap,\n            partial,\n            value = holder[key];\n\n// If the value has a toJSON method, call it to obtain a replacement value.\n\n        if (value && typeof value === 'object' &&\n                typeof value.toJSON === 'function') {\n            value = value.toJSON(key);\n        }\n\n// If we were called with a replacer function, then call the replacer to\n// obtain a replacement value.\n\n        if (typeof rep === 'function') {\n            value = rep.call(holder, key, value);\n        }\n\n// What happens next depends on the value's type.\n\n        switch (typeof value) {\n        case 'string':\n            return quote(value);\n\n        case 'number':\n\n// JSON numbers must be finite. Encode non-finite numbers as null.\n\n            return isFinite(value) ? String(value) : 'null';\n\n        case 'boolean':\n        case 'null':\n\n// If the value is a boolean or null, convert it to a string. Note:\n// typeof null does not produce 'null'. The case is included here in\n// the remote chance that this gets fixed someday.\n\n            return String(value);\n\n// If the type is 'object', we might be dealing with an object or an array or\n// null.\n\n        case 'object':\n\n// Due to a specification blunder in ECMAScript, typeof null is 'object',\n// so watch out for that case.\n\n            if (!value) {\n                return 'null';\n            }\n\n// Make an array to hold the partial results of stringifying this object value.\n\n            gap += indent;\n            partial = [];\n\n// Is the value an array?\n\n            if (Object.prototype.toString.apply(value) === '[object Array]') {\n\n// The value is an array. Stringify every element. Use null as a placeholder\n// for non-JSON values.\n\n                length = value.length;\n                for (i = 0; i < length; i += 1) {\n                    partial[i] = str(i, value) || 'null';\n                }\n\n// Join all of the elements together, separated with commas, and wrap them in\n// brackets.\n\n                v = partial.length === 0\n                    ? '[]'\n                    : gap\n                    ? '[\\n' + gap + partial.join(',\\n' + gap) + '\\n' + mind + ']'\n                    : '[' + partial.join(',') + ']';\n                gap = mind;\n                return v;\n            }\n\n// If the replacer is an array, use it to select the members to be stringified.\n\n            if (rep && typeof rep === 'object') {\n                length = rep.length;\n                for (i = 0; i < length; i += 1) {\n                    if (typeof rep[i] === 'string') {\n                        k = rep[i];\n                        v = str(k, value);\n                        if (v) {\n                            partial.push(quote(k) + (gap ? ': ' : ':') + v);\n                        }\n                    }\n                }\n            } else {\n\n// Otherwise, iterate through all of the keys in the object.\n\n                for (k in value) {\n                    if (Object.prototype.hasOwnProperty.call(value, k)) {\n                        v = str(k, value);\n                        if (v) {\n                            partial.push(quote(k) + (gap ? ': ' : ':') + v);\n                        }\n                    }\n                }\n            }\n\n// Join all of the member texts together, separated with commas,\n// and wrap them in braces.\n\n            v = partial.length === 0\n                ? '{}'\n                : gap\n                ? '{\\n' + gap + partial.join(',\\n' + gap) + '\\n' + mind + '}'\n                : '{' + partial.join(',') + '}';\n            gap = mind;\n            return v;\n        }\n    }\n\n// If the JSON object does not yet have a stringify method, give it one.\n\n    if (typeof JSON.stringify !== 'function') {\n        JSON.stringify = function (value, replacer, space) {\n\n// The stringify method takes a value and an optional replacer, and an optional\n// space parameter, and returns a JSON text. The replacer can be a function\n// that can replace values, or an array of strings that will select the keys.\n// A default replacer method can be provided. Use of the space parameter can\n// produce text that is more easily readable.\n\n            var i;\n            gap = '';\n            indent = '';\n\n// If the space parameter is a number, make an indent string containing that\n// many spaces.\n\n            if (typeof space === 'number') {\n                for (i = 0; i < space; i += 1) {\n                    indent += ' ';\n                }\n\n// If the space parameter is a string, it will be used as the indent string.\n\n            } else if (typeof space === 'string') {\n                indent = space;\n            }\n\n// If there is a replacer, it must be a function or an array.\n// Otherwise, throw an error.\n\n            rep = replacer;\n            if (replacer && typeof replacer !== 'function' &&\n                    (typeof replacer !== 'object' ||\n                    typeof replacer.length !== 'number')) {\n                throw new Error('JSON.stringify');\n            }\n\n// Make a fake root object containing our value under the key of ''.\n// Return the result of stringifying the value.\n\n            return str('', {'': value});\n        };\n    }\n\n\n// If the JSON object does not yet have a parse method, give it one.\n\n    if (typeof JSON.parse !== 'function') {\n        JSON.parse = function (text, reviver) {\n\n// The parse method takes a text and an optional reviver function, and returns\n// a JavaScript value if the text is a valid JSON text.\n\n            var j;\n\n            function walk(holder, key) {\n\n// The walk method is used to recursively walk the resulting structure so\n// that modifications can be made.\n\n                var k, v, value = holder[key];\n                if (value && typeof value === 'object') {\n                    for (k in value) {\n                        if (Object.prototype.hasOwnProperty.call(value, k)) {\n                            v = walk(value, k);\n                            if (v !== undefined) {\n                                value[k] = v;\n                            } else {\n                                delete value[k];\n                            }\n                        }\n                    }\n                }\n                return reviver.call(holder, key, value);\n            }\n\n\n// Parsing happens in four stages. In the first stage, we replace certain\n// Unicode characters with escape sequences. JavaScript handles many characters\n// incorrectly, either silently deleting them, or treating them as line endings.\n\n            text = String(text);\n            cx.lastIndex = 0;\n            if (cx.test(text)) {\n                text = text.replace(cx, function (a) {\n                    return '\\\\u' +\n                        ('0000' + a.charCodeAt(0).toString(16)).slice(-4);\n                });\n            }\n\n// In the second stage, we run the text against regular expressions that look\n// for non-JSON patterns. We are especially concerned with '()' and 'new'\n// because they can cause invocation, and '=' because it can cause mutation.\n// But just to be safe, we want to reject all unexpected forms.\n\n// We split the second stage into 4 regexp operations in order to work around\n// crippling inefficiencies in IE's and Safari's regexp engines. First we\n// replace the JSON backslash pairs with '@' (a non-JSON character). Second, we\n// replace all simple value tokens with ']' characters. Third, we delete all\n// open brackets that follow a colon or comma or that begin the text. Finally,\n// we look to see that the remaining characters are only whitespace or ']' or\n// ',' or ':' or '{' or '}'. If that is so, then the text is safe for eval.\n\n            if (/^[\\],:{}\\s]*$/\n                    .test(text.replace(/\\\\(?:[\"\\\\\\/bfnrt]|u[0-9a-fA-F]{4})/g, '@')\n                        .replace(/\"[^\"\\\\\\n\\r]*\"|true|false|null|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?/g, ']')\n                        .replace(/(?:^|:|,)(?:\\s*\\[)+/g, ''))) {\n\n// In the third stage we use the eval function to compile the text into a\n// JavaScript structure. The '{' operator is subject to a syntactic ambiguity\n// in JavaScript: it can begin a block or an object literal. We wrap the text\n// in parens to eliminate the ambiguity.\n\n                j = eval('(' + text + ')');\n\n// In the optional fourth stage, we recursively walk the new structure, passing\n// each name/value pair to a reviver function for possible transformation.\n\n                return typeof reviver === 'function'\n                    ? walk({'': j}, '')\n                    : j;\n            }\n\n// If the text is not JSON parseable, then a SyntaxError is thrown.\n\n            throw new SyntaxError('JSON.parse');\n        };\n    }\n}());\n\nmodule.exports = JSON\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/json-fallback/index.js\n ** module id = 32\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/json-fallback/index.js?");

/***/ },
/* 33 */
/*!**************************************!*\
  !*** ./~/auth0-js/lib/LoginError.js ***!
  \**************************************/
/***/ function(module, exports, __webpack_require__) {

	eval("/**\n * Module dependencies.\n */\n\nvar json_parse = __webpack_require__(/*! ./json-parse */ 31);\n\n/**\n * Expose `LoginError`\n */\n\nmodule.exports = LoginError;\n\n/**\n * Create a `LoginError` by extend of `Error`\n *\n * @param {Number} status\n * @param {String} details\n * @public\n */\n\nfunction LoginError(status, details) {\n  var obj;\n\n  if (typeof details == 'string') {\n    try {\n      obj = json_parse(details);\n    } catch (er) {\n      obj = { message: details };\n    }\n  } else {\n    obj = details || { description: 'server error' };\n  }\n\n  if (!obj.code) {\n    obj.code = obj.error;\n  }\n\n  if ('unauthorized' === obj.code) {\n    status = 401;\n  }\n\n  var message = obj.description || obj.message || obj.error;\n\n  if ('PasswordStrengthError' === obj.name) {\n    message = \"Password is not strong enough.\";\n  }\n\n  var err = Error.call(this, message);\n\n  err.status = status;\n  err.name = obj.code;\n  err.code = obj.code;\n  err.details = obj;\n\n  if (status === 0) {\n    if (!err.code || err.code !== 'offline') {\n      err.code = 'Unknown';\n      err.message = 'Unknown error.';\n    }\n  }\n\n  return err;\n}\n\n/**\n * Extend `LoginError.prototype` with `Error.prototype`\n * and `LoginError` as constructor\n */\n\nif (Object && Object.create) {\n  LoginError.prototype = Object.create(Error.prototype, {\n    constructor: { value: LoginError }\n  });\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/auth0-js/lib/LoginError.js\n ** module id = 33\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/auth0-js/lib/LoginError.js?");

/***/ },
/* 34 */
/*!*************************************!*\
  !*** ./~/auth0-js/lib/use_jsonp.js ***!
  \*************************************/
/***/ function(module, exports) {

	eval("/**\n * Expose `use_jsonp`\n */\n\nmodule.exports = use_jsonp;\n\n/**\n * Return true if `jsonp` is required\n *\n * @return {Boolean}\n * @public\n */\n\nfunction use_jsonp() {\n  var xhr = window.XMLHttpRequest ? new XMLHttpRequest() : null;\n\n  if (xhr && 'withCredentials' in xhr) {\n    return false;\n  }\n\n  // We no longer support XDomainRequest for IE8 and IE9 for CORS because it has many quirks.\n  // if ('XDomainRequest' in window && window.location.protocol === 'https:') {\n  //   return false;\n  // }\n\n  return true;\n}\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/auth0-js/lib/use_jsonp.js\n ** module id = 34\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/auth0-js/lib/use_jsonp.js?");

/***/ },
/* 35 */
/*!*******************************!*\
  !*** ./~/auth0-js/version.js ***!
  \*******************************/
/***/ function(module, exports) {

	eval("module.exports = { str: \"7.0.3\" };\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/auth0-js/version.js\n ** module id = 35\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/auth0-js/version.js?");

/***/ }
/******/ ]);